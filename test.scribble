
import("fibs")
import("fact")
import("arrays")
import("random")
import("variables")
import("functions")

import("sys")

func insertion(n:array(int)):array(int) {

 for var i := 1; i < len(n); i++ {

  var toInsert := n[i]
  var j := i

  while (j > 0) & (toInsert < n[j-1]) {
   n[j] := n[j-1]
   j--
  }

  n[j] := toInsert
 }

 return n
}

func print(n:array(int)) : void {
 
 for var i := 0; i < len(n); i++ {
  sys.Write(sys.String(n[i]) + " ")
 }
 
 sys.Write("\n")
}

func sorted(n:array(int)):bool {

 for var i := 1; i < len(n); i++ {

  if n[i] < n[i-1] {
   return false
  }

 }

 return true
}

func main() : void {

 var arr := [150]int

 for var i := 0; i < len(arr); i++ {
  arr[i] := sys.RandomInt(150)
 }

 sys.Write("Original: ")
 print(arr)
 sys.Write("\n")

 arr := insertion(arr)

 sys.Write("Sorted ("+sys.String(sorted(arr))+"): ")
 print(arr)

}

// The main function in this test situation
//
// No Arguments
//
// No Return
//
// Runs some simple tests

func main2() : void {

	var j := [10]int
	j[3] := 4
	j[4] := 10
	j[2] := 8
	j[1] := 2
	j[0] := 9
	j[5] := 100
	j[6] := 32
	j[7] := 4
	
	for var k := 0; k < len(j); k++ {
		sys.Write(sys.String(j[k]) + " ")
	}
	
	sys.Write("\n")
	
	//quicksort(j, 0, 9)
	
	for k := 0; k < len(j); k++ {
		sys.Write(sys.String(j[k]) + " ")
	}
	
	sys.Write("-- Scribble test program --\n")
	
	var i := 2
	
	if ((i > 0) & (i < 30)) {
		sys.Write("Hi\n")
	}

	if (variables.Test() = false) {
		sys.Write("Variables test failed.\n")
	}

	if (arrays.Test() = false) {
		sys.Write("Arrays test failed.\n")
	}
	
	if (functions.Test() = false) {
		sys.Write("Functions test failed.\n")
	}

	if (random.Test() = false) {
		sys.Write("Random test failed.\n")
	}
	
	if (fibs.Test() = false) {
		sys.Write("Fibonacci test failed.\n")
	}
	
	if (fact.Test() = false) {
		sys.Write("Factorial test failed.\n")
	}

	sys.Write("-- End of scribble test program --\n")
}
