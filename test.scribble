
import("fibs")
import("fact")
import("arrays")
import("random")
import("variables")
import("functions")

import("sys")

func part(n:array(int)) : int {
 
 //Take i to be 0.
 var i := 0

 //Take the last element to be length of n - 1
 var j := len(n)-1

 //Take the pivot value to be the value in the middle
 var pivot := n[(i+j)/2]

 while i <= j {

  while n[i] < pivot {
   i++
  }

  while n[j] > pivot {
   j--
  }

  // As long as i <= j swap n[i] and n[j] and increment them both
  if (i <= j) {
   var temp := n[i]
   n[i] := n[j]
   n[j] := temp
   i++
   j--
  }

 }

 //Return i, the value in the middle
 return i
}

func quickSlice(n : array(int)) : array(int) {

 var i := part(n)
 var finished := [1]bool
	 if (i-1) > 0 {
			quickSlice(n[0:i])
	 }
	 
	 finished[0] := true

 if i < len(n)-1 {
  		quickSlice(n[i:len(n)])
 }
 
 while finished[0] = false {
 }

 return n
}

func print(n : array(int)) : void {
 
 for var i := 0; i < len(n); i++ {
  sys.Write(sys.String(n[i]) + " ")
 }

 sys.Write("\n")

}

func r() : void {
 var j := 0

 thread {
  j := 1
  sys.Write("Hello World\n")
 }

 sys.Write("Hello world 2\n")
}

func main() : void {
 r()
 
 sys.Write("Returned\n")
 
 while true {
 }

}

// The main function in this test situation
//
// No Arguments
//
// No Return
//
// Runs some simple tests

func main2() : void {

	var j := [10]int
	j[3] := 4
	j[4] := 10
	j[2] := 8
	j[1] := 2
	j[0] := 9
	j[5] := 100
	j[6] := 32
	j[7] := 4
	
	for var k := 0; k < len(j); k++ {
		sys.Write(sys.String(j[k]) + " ")
	}
	
	sys.Write("\n")
	
	//quicksort(j, 0, 9)
	
	for k := 0; k < len(j); k++ {
		sys.Write(sys.String(j[k]) + " ")
	}
	
	sys.Write("-- Scribble test program --\n")
	
	var i := 2
	
	if ((i > 0) & (i < 30)) {
		sys.Write("Hi\n")
	}

	if (variables.Test() = false) {
		sys.Write("Variables test failed.\n")
	}

	if (arrays.Test() = false) {
		sys.Write("Arrays test failed.\n")
	}
	
	if (functions.Test() = false) {
		sys.Write("Functions test failed.\n")
	}

	if (random.Test() = false) {
		sys.Write("Random test failed.\n")
	}
	
	if (fibs.Test() = false) {
		sys.Write("Fibonacci test failed.\n")
	}
	
	if (fact.Test() = false) {
		sys.Write("Factorial test failed.\n")
	}

	sys.Write("-- End of scribble test program --\n")
}
