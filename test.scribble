import("fibs")
import("fibs")
import("fact")

// Loop until a six is generated at random
//
// No Arguments
//
// No Return
//
// This function continuously generates random numbers between 1 and 
// 6 using the RandomInt function until a six is found at which point
// it prints the number of iterations to hit a six and returns

func snake() : int {
	
	var temp : int := 0
	var iter : int := 0
	
	while (temp != 6) {
		temp := System.RandomInt(5)
		temp := temp+1
		iter := iter + 1
	}

	return iter
}

// Empty function to ensure language doesn't choke when there are no returns
//
// No Arguments
//
// Return template int
//
// This is the test case to make sure the language could handle functions
// that did not explicitely return.

func emptyReturn() : int {
}

// Infinate loop test
//
// No Arguments
//
// No Returns
//
// Infinate loop used to try and spot memory leaks in statements

func infinateLoop() : void {

	while 1 > 0 {
	
		snake()
	
	}

}

// The main function in this test situation
//
// No Arguments
//
// No Return
//
// Runs some simple tests

func main() : void {

	System.Write("HALLO WORLD\n")

	var cookies : int := 0
	
	System.Write("So many cookies: " + System.String(cookies) + "\n")

	for var i : int := 0; i < 10; i := i + 1 {
		System.Write( System.String ( fibs.Fibs(i) ) + " ")
	}
	
	System.Write("\n")
	
	for i := 0; i < 10; i := i + 1 {
		System.Write( System.String(fact.Fact(i)) + " ")
	}
	System.Write("\n")
	
	infinateLoop()
	
	//Write(String(i) + "\n")

	//var fibsTo : int := 8
	//var factTo : int := 6
	
	//Write("Calculating " + String(fibsTo) + " of fibs\n")
	//Write(String(fibs(fibsTo)) + "\n")
	
	//Write("Looping fibs between 0 and 10\n")
	
	//for var i : int := 0; i < 10; i := i + 1 {
	//	Write(String(fibs(i)) + " ")
	//}
	
	//Write("\n")

	//Write("Writing the factorial of " + String(factTo) + "\n")
	//Write(String(fact(factTo)) + "\n")
	
	//Write("For looping factorial between 1 and 10\n")
	
	//for var x : int := 1; x < 10; x := x + 1 {
	//	Write(String(fact(x)) + " ")
	//}
	
	//Write("\n")
	
	//Write(String(snake()) + " attempts required until a six was rolled\n")
	
	//Write(String(emptyReturn()) + "\n")
	//infinateLoop()
}