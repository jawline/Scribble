import("sys")
import("fibs")
import("fact")
import("arrays")
import("random")
import("variables")
import("functions")

func partition(n : array(int)) : int {
	var i := 0
	var j := len(n)-1
	var tmp : int
	var pivot := n[(i+j)/2]
	
	while (i <= j) {
	
		while (n[i] < pivot) {
			i++
		}
		
		while (n[j] > pivot) {
			j--
		}
		
		if (i <= j) {
			tmp := n[i]
			n[i] := n[j]
			n[j] := tmp
			i++
			j--
		}
	
	}
	
	return i
}

func quicksort(n : array(int)) : array(int) {
	
	var index := partition(n)
	
	if index > 1 {
		quicksort(n[0:index-1])
	}
	
	if index < len(n) {
		quicksort(n[index:len(n)])
	}
}

// The main function in this test situation
//
// No Arguments
//
// No Return
//
// Runs some simple tests

func main() : void {

	var j := [5]int
	j[3] := 4
	j[4] := 10
	j[2] := 8
	j[1] := 2
	j[0] := 9
	quicksort(j)
	
	for var k := 0; k < len(j); k++ {
		sys.Write(sys.String(j[k]) + " ")
	}
	
	sys.Write("-- Scribble test program --\n")
	
	var i := 2
	
	if ((i > 0) & (i < 30)) {
		sys.Write("Hi\n")
	}

	if (variables.Test() = false) {
		sys.Write("Variables test failed.\n")
	}

	if (arrays.Test() = false) {
		sys.Write("Arrays test failed.\n")
	}
	
	if (functions.Test() = false) {
		sys.Write("Functions test failed.\n")
	}

	if (random.Test() = false) {
		sys.Write("Random test failed.\n")
	}
	
	if (fibs.Test() = false) {
		sys.Write("Fibonacci test failed.\n")
	}
	
	if (fact.Test() = false) {
		sys.Write("Factorial test failed.\n")
	}

	sys.Write("-- End of scribble test program --\n")
}
