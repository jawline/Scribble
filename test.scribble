import("sys")
import("fibs")
import("fact")
import("arrays")
import("random")
import("variables")
import("functions")

import("sys")

func part(n:array(int), left:int, right:int) : int {

var i := left
var j := right
var pivot := n[(i+j)/2]
var temp := 0

while i <= j {

while n[i] < pivot {
i++
}

while n[j] > pivot {
j--
}

if (i <= j) {
temp := n[i]
n[i] := n[j]
n[j] := temp
i++
j--
}

}

sys.Write("Pivot("+sys.String(pivot)+") i("+sys.String(i)+") ")
for var iter := 0; iter < len(n); iter++ {
sys.Write(sys.String(n[iter]) + " ")
}
sys.Write("\n")

return i
}

func quick(n : array(int), left : int, right : int) : array(int) {
var i := part(n, left, right)
var j := i-1

if left < j {
quick(n, left, j)
}

if i < right {
quick(n, i, right)
}
}

func quickSlice(n : array(int)) : array(int) {

var left := 0
var right := len(n)-1

var i := part(n, left, right)

var j := i-1

if j > 0 {
quickSlice(n[0:i])
}

if i < right {
quickSlice(n[i:len(n)])
}

return n
}

func main() : void {
var j := [20]int
sys.Write( sys.String( len(j[1:3])) + "\n")

for var i := 0; i < len(j); i++ {
j[i] := sys.RandomInt(100)
}

for i := 0; i < len(j); i++ {
sys.Write(sys.String(j[i]) + " ")
}
sys.Write("\n")

quickSlice(j)

for i := 0; i < len(j); i++ {
sys.Write(sys.String(j[i]) + " ")
}
sys.Write("\n")
}

// The main function in this test situation
//
// No Arguments
//
// No Return
//
// Runs some simple tests

func main2() : void {

	var j := [10]int
	j[3] := 4
	j[4] := 10
	j[2] := 8
	j[1] := 2
	j[0] := 9
	j[5] := 100
	j[6] := 32
	j[7] := 4
	
	for var k := 0; k < len(j); k++ {
		sys.Write(sys.String(j[k]) + " ")
	}
	
	sys.Write("\n")
	
	//quicksort(j, 0, 9)
	
	for k := 0; k < len(j); k++ {
		sys.Write(sys.String(j[k]) + " ")
	}
	
	sys.Write("-- Scribble test program --\n")
	
	var i := 2
	
	if ((i > 0) & (i < 30)) {
		sys.Write("Hi\n")
	}

	if (variables.Test() = false) {
		sys.Write("Variables test failed.\n")
	}

	if (arrays.Test() = false) {
		sys.Write("Arrays test failed.\n")
	}
	
	if (functions.Test() = false) {
		sys.Write("Functions test failed.\n")
	}

	if (random.Test() = false) {
		sys.Write("Random test failed.\n")
	}
	
	if (fibs.Test() = false) {
		sys.Write("Fibonacci test failed.\n")
	}
	
	if (fact.Test() = false) {
		sys.Write("Factorial test failed.\n")
	}

	sys.Write("-- End of scribble test program --\n")
}
