Terminals unused in grammar

   REAL
   PLUS
   MINUS
   TIMES
   DIVIDE
   POWER
   FUNCTION
   CONST
   STRUCT
   END
   NEG


State 3 conflicts: 1 shift/reduce
State 22 conflicts: 3 shift/reduce
State 30 conflicts: 3 shift/reduce
State 31 conflicts: 3 shift/reduce
State 32 conflicts: 3 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: /* empty */
    2        | Program Variable
    3        | Program Variable ASSIGN Statement
    4        | Program Statement

    5 Variable: VARIABLE WORD COLON TYPE_INT
    6         | VARIABLE WORD COLON TYPE_STRING

    7 Arguments: Statement
    8          | Arguments COMMA Statement

    9 Statements: /* empty */
   10           | Statements Statement

   11 Statement: INT
   12          | STRING
   13          | WORD
   14          | IF Statement LBRACKET Statements RBRACKET
   15          | IF Statement LBRACKET Statements RBRACKET ELSE LBRACKET Statements RBRACKET
   16          | WORD LPAREN Arguments RPAREN
   17          | Statement EQUALS Statement
   18          | Statement GREATER Statement
   19          | Statement LESSER Statement
   20          | TYPE_STRING LPAREN Arguments RPAREN
   21          | LPAREN Statement RPAREN
   22          | WORD ASSIGN Statement


Terminals, with rules where they appear

$end (0) 0
error (256)
WORD (258) 5 6 13 16 22
STRING (259) 12
REAL (260)
INT (261) 11
PLUS (262)
MINUS (263)
TIMES (264)
DIVIDE (265)
POWER (266)
EQUALS (267) 17
ASSIGN (268) 3 22
IF (269) 14 15
ELSE (270) 15
GREATER (271) 18
LESSER (272) 19
LPAREN (273) 16 20 21
RPAREN (274) 16 20 21
LBRACKET (275) 14 15
RBRACKET (276) 14 15
COMMA (277) 8
FUNCTION (278)
VARIABLE (279) 5 6
CONST (280)
STRUCT (281)
TYPE_INT (282) 5
TYPE_STRING (283) 6 20
COLON (284) 5 6
END (285)
NEG (286)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
Program (33)
    on left: 1 2 3 4, on right: 0 2 3 4
Variable (34)
    on left: 5 6, on right: 2 3
Arguments (35)
    on left: 7 8, on right: 8 16 20
Statements (36)
    on left: 9 10, on right: 10 14 15
Statement (37)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22, on right: 3 4 7 8
    10 14 15 17 18 19 21 22


state 0

    0 $accept: . Program $end

    $default  reduce using rule 1 (Program)

    Program  go to state 1


state 1

    0 $accept: Program . $end
    2 Program: Program . Variable
    3        | Program . Variable ASSIGN Statement
    4        | Program . Statement

    $end         shift, and go to state 2
    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    LPAREN       shift, and go to state 7
    VARIABLE     shift, and go to state 8
    TYPE_STRING  shift, and go to state 9

    Variable   go to state 10
    Statement  go to state 11


state 2

    0 $accept: Program $end .

    $default  accept


state 3

   13 Statement: WORD .
   16          | WORD . LPAREN Arguments RPAREN
   22          | WORD . ASSIGN Statement

    ASSIGN  shift, and go to state 12
    LPAREN  shift, and go to state 13

    LPAREN    [reduce using rule 13 (Statement)]
    $default  reduce using rule 13 (Statement)


state 4

   12 Statement: STRING .

    $default  reduce using rule 12 (Statement)


state 5

   11 Statement: INT .

    $default  reduce using rule 11 (Statement)


state 6

   14 Statement: IF . Statement LBRACKET Statements RBRACKET
   15          | IF . Statement LBRACKET Statements RBRACKET ELSE LBRACKET Statements RBRACKET

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    LPAREN       shift, and go to state 7
    TYPE_STRING  shift, and go to state 9

    Statement  go to state 14


state 7

   21 Statement: LPAREN . Statement RPAREN

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    LPAREN       shift, and go to state 7
    TYPE_STRING  shift, and go to state 9

    Statement  go to state 15


state 8

    5 Variable: VARIABLE . WORD COLON TYPE_INT
    6         | VARIABLE . WORD COLON TYPE_STRING

    WORD  shift, and go to state 16


state 9

   20 Statement: TYPE_STRING . LPAREN Arguments RPAREN

    LPAREN  shift, and go to state 17


state 10

    2 Program: Program Variable .
    3        | Program Variable . ASSIGN Statement

    ASSIGN  shift, and go to state 18

    $default  reduce using rule 2 (Program)


state 11

    4 Program: Program Statement .
   17 Statement: Statement . EQUALS Statement
   18          | Statement . GREATER Statement
   19          | Statement . LESSER Statement

    EQUALS   shift, and go to state 19
    GREATER  shift, and go to state 20
    LESSER   shift, and go to state 21

    $default  reduce using rule 4 (Program)


state 12

   22 Statement: WORD ASSIGN . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    LPAREN       shift, and go to state 7
    TYPE_STRING  shift, and go to state 9

    Statement  go to state 22


state 13

   16 Statement: WORD LPAREN . Arguments RPAREN

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    LPAREN       shift, and go to state 7
    TYPE_STRING  shift, and go to state 9

    Arguments  go to state 23
    Statement  go to state 24


state 14

   14 Statement: IF Statement . LBRACKET Statements RBRACKET
   15          | IF Statement . LBRACKET Statements RBRACKET ELSE LBRACKET Statements RBRACKET
   17          | Statement . EQUALS Statement
   18          | Statement . GREATER Statement
   19          | Statement . LESSER Statement

    EQUALS    shift, and go to state 19
    GREATER   shift, and go to state 20
    LESSER    shift, and go to state 21
    LBRACKET  shift, and go to state 25


state 15

   17 Statement: Statement . EQUALS Statement
   18          | Statement . GREATER Statement
   19          | Statement . LESSER Statement
   21          | LPAREN Statement . RPAREN

    EQUALS   shift, and go to state 19
    GREATER  shift, and go to state 20
    LESSER   shift, and go to state 21
    RPAREN   shift, and go to state 26


state 16

    5 Variable: VARIABLE WORD . COLON TYPE_INT
    6         | VARIABLE WORD . COLON TYPE_STRING

    COLON  shift, and go to state 27


state 17

   20 Statement: TYPE_STRING LPAREN . Arguments RPAREN

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    LPAREN       shift, and go to state 7
    TYPE_STRING  shift, and go to state 9

    Arguments  go to state 28
    Statement  go to state 24


state 18

    3 Program: Program Variable ASSIGN . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    LPAREN       shift, and go to state 7
    TYPE_STRING  shift, and go to state 9

    Statement  go to state 29


state 19

   17 Statement: Statement EQUALS . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    LPAREN       shift, and go to state 7
    TYPE_STRING  shift, and go to state 9

    Statement  go to state 30


state 20

   18 Statement: Statement GREATER . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    LPAREN       shift, and go to state 7
    TYPE_STRING  shift, and go to state 9

    Statement  go to state 31


state 21

   19 Statement: Statement LESSER . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    LPAREN       shift, and go to state 7
    TYPE_STRING  shift, and go to state 9

    Statement  go to state 32


state 22

   17 Statement: Statement . EQUALS Statement
   18          | Statement . GREATER Statement
   19          | Statement . LESSER Statement
   22          | WORD ASSIGN Statement .

    EQUALS   shift, and go to state 19
    GREATER  shift, and go to state 20
    LESSER   shift, and go to state 21

    EQUALS    [reduce using rule 22 (Statement)]
    GREATER   [reduce using rule 22 (Statement)]
    LESSER    [reduce using rule 22 (Statement)]
    $default  reduce using rule 22 (Statement)


state 23

    8 Arguments: Arguments . COMMA Statement
   16 Statement: WORD LPAREN Arguments . RPAREN

    RPAREN  shift, and go to state 33
    COMMA   shift, and go to state 34


state 24

    7 Arguments: Statement .
   17 Statement: Statement . EQUALS Statement
   18          | Statement . GREATER Statement
   19          | Statement . LESSER Statement

    EQUALS   shift, and go to state 19
    GREATER  shift, and go to state 20
    LESSER   shift, and go to state 21

    $default  reduce using rule 7 (Arguments)


state 25

   14 Statement: IF Statement LBRACKET . Statements RBRACKET
   15          | IF Statement LBRACKET . Statements RBRACKET ELSE LBRACKET Statements RBRACKET

    $default  reduce using rule 9 (Statements)

    Statements  go to state 35


state 26

   21 Statement: LPAREN Statement RPAREN .

    $default  reduce using rule 21 (Statement)


state 27

    5 Variable: VARIABLE WORD COLON . TYPE_INT
    6         | VARIABLE WORD COLON . TYPE_STRING

    TYPE_INT     shift, and go to state 36
    TYPE_STRING  shift, and go to state 37


state 28

    8 Arguments: Arguments . COMMA Statement
   20 Statement: TYPE_STRING LPAREN Arguments . RPAREN

    RPAREN  shift, and go to state 38
    COMMA   shift, and go to state 34


state 29

    3 Program: Program Variable ASSIGN Statement .
   17 Statement: Statement . EQUALS Statement
   18          | Statement . GREATER Statement
   19          | Statement . LESSER Statement

    EQUALS   shift, and go to state 19
    GREATER  shift, and go to state 20
    LESSER   shift, and go to state 21

    $default  reduce using rule 3 (Program)


state 30

   17 Statement: Statement . EQUALS Statement
   17          | Statement EQUALS Statement .
   18          | Statement . GREATER Statement
   19          | Statement . LESSER Statement

    EQUALS   shift, and go to state 19
    GREATER  shift, and go to state 20
    LESSER   shift, and go to state 21

    EQUALS    [reduce using rule 17 (Statement)]
    GREATER   [reduce using rule 17 (Statement)]
    LESSER    [reduce using rule 17 (Statement)]
    $default  reduce using rule 17 (Statement)


state 31

   17 Statement: Statement . EQUALS Statement
   18          | Statement . GREATER Statement
   18          | Statement GREATER Statement .
   19          | Statement . LESSER Statement

    EQUALS   shift, and go to state 19
    GREATER  shift, and go to state 20
    LESSER   shift, and go to state 21

    EQUALS    [reduce using rule 18 (Statement)]
    GREATER   [reduce using rule 18 (Statement)]
    LESSER    [reduce using rule 18 (Statement)]
    $default  reduce using rule 18 (Statement)


state 32

   17 Statement: Statement . EQUALS Statement
   18          | Statement . GREATER Statement
   19          | Statement . LESSER Statement
   19          | Statement LESSER Statement .

    EQUALS   shift, and go to state 19
    GREATER  shift, and go to state 20
    LESSER   shift, and go to state 21

    EQUALS    [reduce using rule 19 (Statement)]
    GREATER   [reduce using rule 19 (Statement)]
    LESSER    [reduce using rule 19 (Statement)]
    $default  reduce using rule 19 (Statement)


state 33

   16 Statement: WORD LPAREN Arguments RPAREN .

    $default  reduce using rule 16 (Statement)


state 34

    8 Arguments: Arguments COMMA . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    LPAREN       shift, and go to state 7
    TYPE_STRING  shift, and go to state 9

    Statement  go to state 39


state 35

   10 Statements: Statements . Statement
   14 Statement: IF Statement LBRACKET Statements . RBRACKET
   15          | IF Statement LBRACKET Statements . RBRACKET ELSE LBRACKET Statements RBRACKET

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    LPAREN       shift, and go to state 7
    RBRACKET     shift, and go to state 40
    TYPE_STRING  shift, and go to state 9

    Statement  go to state 41


state 36

    5 Variable: VARIABLE WORD COLON TYPE_INT .

    $default  reduce using rule 5 (Variable)


state 37

    6 Variable: VARIABLE WORD COLON TYPE_STRING .

    $default  reduce using rule 6 (Variable)


state 38

   20 Statement: TYPE_STRING LPAREN Arguments RPAREN .

    $default  reduce using rule 20 (Statement)


state 39

    8 Arguments: Arguments COMMA Statement .
   17 Statement: Statement . EQUALS Statement
   18          | Statement . GREATER Statement
   19          | Statement . LESSER Statement

    EQUALS   shift, and go to state 19
    GREATER  shift, and go to state 20
    LESSER   shift, and go to state 21

    $default  reduce using rule 8 (Arguments)


state 40

   14 Statement: IF Statement LBRACKET Statements RBRACKET .
   15          | IF Statement LBRACKET Statements RBRACKET . ELSE LBRACKET Statements RBRACKET

    ELSE  shift, and go to state 42

    $default  reduce using rule 14 (Statement)


state 41

   10 Statements: Statements Statement .
   17 Statement: Statement . EQUALS Statement
   18          | Statement . GREATER Statement
   19          | Statement . LESSER Statement

    EQUALS   shift, and go to state 19
    GREATER  shift, and go to state 20
    LESSER   shift, and go to state 21

    $default  reduce using rule 10 (Statements)


state 42

   15 Statement: IF Statement LBRACKET Statements RBRACKET ELSE . LBRACKET Statements RBRACKET

    LBRACKET  shift, and go to state 43


state 43

   15 Statement: IF Statement LBRACKET Statements RBRACKET ELSE LBRACKET . Statements RBRACKET

    $default  reduce using rule 9 (Statements)

    Statements  go to state 44


state 44

   10 Statements: Statements . Statement
   15 Statement: IF Statement LBRACKET Statements RBRACKET ELSE LBRACKET Statements . RBRACKET

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    LPAREN       shift, and go to state 7
    RBRACKET     shift, and go to state 45
    TYPE_STRING  shift, and go to state 9

    Statement  go to state 41


state 45

   15 Statement: IF Statement LBRACKET Statements RBRACKET ELSE LBRACKET Statements RBRACKET .

    $default  reduce using rule 15 (Statement)
