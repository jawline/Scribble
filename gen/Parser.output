Terminals unused in grammar

   REAL
   DIVIDE
   POWER
   CONST
   STRUCT
   NEG


State 32 conflicts: 3 shift/reduce
State 70 conflicts: 7 shift/reduce
State 79 conflicts: 7 shift/reduce
State 80 conflicts: 4 shift/reduce
State 81 conflicts: 4 shift/reduce
State 82 conflicts: 4 shift/reduce
State 83 conflicts: 7 shift/reduce
State 84 conflicts: 7 shift/reduce
State 85 conflicts: 7 shift/reduce
State 93 conflicts: 7 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: /* empty */
    2        | Program IMPORT LPAREN STRING RPAREN
    3        | Program Function

    4 Type: TYPE_INT
    5     | TYPE_STRING
    6     | TYPE_BOOL
    7     | TYPE_VOID

    8 Variable: VARIABLE WORD COLON Type

    9 Variables: Variable
   10          | Variables COMMA Variable

   11 Function: FUNCTION WORD LPAREN Variables RPAREN COLON Type LBRACKET Statements RBRACKET
   12         | FUNCTION WORD LPAREN RPAREN COLON Type LBRACKET Statements RBRACKET

   13 Arguments: Statement
   14          | Arguments COMMA Statement

   15 Statements: /* empty */
   16           | Statements Statement
   17           | Statements RETURN Statement

   18 FunctionCall: WORD LPAREN Arguments RPAREN
   19             | WORD LPAREN RPAREN
   20             | WORD LINK WORD LPAREN Arguments RPAREN
   21             | WORD LINK WORD LPAREN RPAREN

   22 Statement: TRUE
   23          | FALSE
   24          | INT
   25          | STRING
   26          | Variable
   27          | Variable ASSIGN Statement
   28          | WORD
   29          | FunctionCall
   30          | IF Statement LBRACKET Statements RBRACKET
   31          | IF Statement LBRACKET Statements RBRACKET ELSE LBRACKET Statements RBRACKET
   32          | Statement PLUS Statement
   33          | Statement MINUS Statement
   34          | Statement TIMES Statement
   35          | FOR Statement END Statement END Statement LBRACKET Statements RBRACKET
   36          | WHILE Statement LBRACKET Statements RBRACKET
   37          | Statement EQUALS Statement
   38          | Statement NOT EQUALS Statement
   39          | Statement GREATER Statement
   40          | Statement LESSER Statement
   41          | LPAREN Statement RPAREN
   42          | WORD ASSIGN Statement
   43          | WORD TWOPLUS
   44          | TWOPLUS WORD
   45          | WORD TWOMINUS
   46          | TWOMINUS WORD


Terminals, with rules where they appear

$end (0) 0
error (256)
WORD (258) 8 11 12 18 19 20 21 28 42 43 44 45 46
STRING (259) 2 25
REAL (260)
INT (261) 24
PLUS (262) 32
MINUS (263) 33
TIMES (264) 34
DIVIDE (265)
POWER (266)
EQUALS (267) 37 38
ASSIGN (268) 27 42
IF (269) 30 31
ELSE (270) 31
GREATER (271) 39
LESSER (272) 40
FOR (273) 35
TYPE_VOID (274) 7
RETURN (275) 17
WHILE (276) 36
NOT (277) 38
IMPORT (278) 2
LINK (279) 20 21
LPAREN (280) 2 11 12 18 19 20 21 41
RPAREN (281) 2 11 12 18 19 20 21 41
LBRACKET (282) 11 12 30 31 35 36
RBRACKET (283) 11 12 30 31 35 36
COMMA (284) 10 14
TWOMINUS (285) 45 46
TWOPLUS (286) 43 44
TYPE_BOOL (287) 6
TRUE (288) 22
FALSE (289) 23
FUNCTION (290) 11 12
VARIABLE (291) 8
CONST (292)
STRUCT (293)
TYPE_INT (294) 4
TYPE_STRING (295) 5
COLON (296) 8 11 12
END (297) 35
NEG (298)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
Program (45)
    on left: 1 2 3, on right: 0 2 3
Type (46)
    on left: 4 5 6 7, on right: 8 11 12
Variable (47)
    on left: 8, on right: 9 10 26 27
Variables (48)
    on left: 9 10, on right: 10 11
Function (49)
    on left: 11 12, on right: 3
Arguments (50)
    on left: 13 14, on right: 14 18 20
Statements (51)
    on left: 15 16 17, on right: 11 12 16 17 30 31 35 36
FunctionCall (52)
    on left: 18 19 20 21, on right: 29
Statement (53)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39
    40 41 42 43 44 45 46, on right: 13 14 16 17 27 30 31 32 33 34 35
    36 37 38 39 40 41 42


state 0

    0 $accept: . Program $end

    $default  reduce using rule 1 (Program)

    Program  go to state 1


state 1

    0 $accept: Program . $end
    2 Program: Program . IMPORT LPAREN STRING RPAREN
    3        | Program . Function

    $end      shift, and go to state 2
    IMPORT    shift, and go to state 3
    FUNCTION  shift, and go to state 4

    Function  go to state 5


state 2

    0 $accept: Program $end .

    $default  accept


state 3

    2 Program: Program IMPORT . LPAREN STRING RPAREN

    LPAREN  shift, and go to state 6


state 4

   11 Function: FUNCTION . WORD LPAREN Variables RPAREN COLON Type LBRACKET Statements RBRACKET
   12         | FUNCTION . WORD LPAREN RPAREN COLON Type LBRACKET Statements RBRACKET

    WORD  shift, and go to state 7


state 5

    3 Program: Program Function .

    $default  reduce using rule 3 (Program)


state 6

    2 Program: Program IMPORT LPAREN . STRING RPAREN

    STRING  shift, and go to state 8


state 7

   11 Function: FUNCTION WORD . LPAREN Variables RPAREN COLON Type LBRACKET Statements RBRACKET
   12         | FUNCTION WORD . LPAREN RPAREN COLON Type LBRACKET Statements RBRACKET

    LPAREN  shift, and go to state 9


state 8

    2 Program: Program IMPORT LPAREN STRING . RPAREN

    RPAREN  shift, and go to state 10


state 9

   11 Function: FUNCTION WORD LPAREN . Variables RPAREN COLON Type LBRACKET Statements RBRACKET
   12         | FUNCTION WORD LPAREN . RPAREN COLON Type LBRACKET Statements RBRACKET

    RPAREN    shift, and go to state 11
    VARIABLE  shift, and go to state 12

    Variable   go to state 13
    Variables  go to state 14


state 10

    2 Program: Program IMPORT LPAREN STRING RPAREN .

    $default  reduce using rule 2 (Program)


state 11

   12 Function: FUNCTION WORD LPAREN RPAREN . COLON Type LBRACKET Statements RBRACKET

    COLON  shift, and go to state 15


state 12

    8 Variable: VARIABLE . WORD COLON Type

    WORD  shift, and go to state 16


state 13

    9 Variables: Variable .

    $default  reduce using rule 9 (Variables)


state 14

   10 Variables: Variables . COMMA Variable
   11 Function: FUNCTION WORD LPAREN Variables . RPAREN COLON Type LBRACKET Statements RBRACKET

    RPAREN  shift, and go to state 17
    COMMA   shift, and go to state 18


state 15

   12 Function: FUNCTION WORD LPAREN RPAREN COLON . Type LBRACKET Statements RBRACKET

    TYPE_VOID    shift, and go to state 19
    TYPE_BOOL    shift, and go to state 20
    TYPE_INT     shift, and go to state 21
    TYPE_STRING  shift, and go to state 22

    Type  go to state 23


state 16

    8 Variable: VARIABLE WORD . COLON Type

    COLON  shift, and go to state 24


state 17

   11 Function: FUNCTION WORD LPAREN Variables RPAREN . COLON Type LBRACKET Statements RBRACKET

    COLON  shift, and go to state 25


state 18

   10 Variables: Variables COMMA . Variable

    VARIABLE  shift, and go to state 12

    Variable  go to state 26


state 19

    7 Type: TYPE_VOID .

    $default  reduce using rule 7 (Type)


state 20

    6 Type: TYPE_BOOL .

    $default  reduce using rule 6 (Type)


state 21

    4 Type: TYPE_INT .

    $default  reduce using rule 4 (Type)


state 22

    5 Type: TYPE_STRING .

    $default  reduce using rule 5 (Type)


state 23

   12 Function: FUNCTION WORD LPAREN RPAREN COLON Type . LBRACKET Statements RBRACKET

    LBRACKET  shift, and go to state 27


state 24

    8 Variable: VARIABLE WORD COLON . Type

    TYPE_VOID    shift, and go to state 19
    TYPE_BOOL    shift, and go to state 20
    TYPE_INT     shift, and go to state 21
    TYPE_STRING  shift, and go to state 22

    Type  go to state 28


state 25

   11 Function: FUNCTION WORD LPAREN Variables RPAREN COLON . Type LBRACKET Statements RBRACKET

    TYPE_VOID    shift, and go to state 19
    TYPE_BOOL    shift, and go to state 20
    TYPE_INT     shift, and go to state 21
    TYPE_STRING  shift, and go to state 22

    Type  go to state 29


state 26

   10 Variables: Variables COMMA Variable .

    $default  reduce using rule 10 (Variables)


state 27

   12 Function: FUNCTION WORD LPAREN RPAREN COLON Type LBRACKET . Statements RBRACKET

    $default  reduce using rule 15 (Statements)

    Statements  go to state 30


state 28

    8 Variable: VARIABLE WORD COLON Type .

    $default  reduce using rule 8 (Variable)


state 29

   11 Function: FUNCTION WORD LPAREN Variables RPAREN COLON Type . LBRACKET Statements RBRACKET

    LBRACKET  shift, and go to state 31


state 30

   12 Function: FUNCTION WORD LPAREN RPAREN COLON Type LBRACKET Statements . RBRACKET
   16 Statements: Statements . Statement
   17           | Statements . RETURN Statement

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    RBRACKET  shift, and go to state 40
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 47


state 31

   11 Function: FUNCTION WORD LPAREN Variables RPAREN COLON Type LBRACKET . Statements RBRACKET

    $default  reduce using rule 15 (Statements)

    Statements  go to state 48


state 32

   18 FunctionCall: WORD . LPAREN Arguments RPAREN
   19             | WORD . LPAREN RPAREN
   20             | WORD . LINK WORD LPAREN Arguments RPAREN
   21             | WORD . LINK WORD LPAREN RPAREN
   28 Statement: WORD .
   42          | WORD . ASSIGN Statement
   43          | WORD . TWOPLUS
   45          | WORD . TWOMINUS

    ASSIGN    shift, and go to state 49
    LINK      shift, and go to state 50
    LPAREN    shift, and go to state 51
    TWOMINUS  shift, and go to state 52
    TWOPLUS   shift, and go to state 53

    LPAREN    [reduce using rule 28 (Statement)]
    TWOMINUS  [reduce using rule 28 (Statement)]
    TWOPLUS   [reduce using rule 28 (Statement)]
    $default  reduce using rule 28 (Statement)


state 33

   25 Statement: STRING .

    $default  reduce using rule 25 (Statement)


state 34

   24 Statement: INT .

    $default  reduce using rule 24 (Statement)


state 35

   30 Statement: IF . Statement LBRACKET Statements RBRACKET
   31          | IF . Statement LBRACKET Statements RBRACKET ELSE LBRACKET Statements RBRACKET

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 54


state 36

   35 Statement: FOR . Statement END Statement END Statement LBRACKET Statements RBRACKET

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 55


state 37

   17 Statements: Statements RETURN . Statement

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 56


state 38

   36 Statement: WHILE . Statement LBRACKET Statements RBRACKET

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 57


state 39

   41 Statement: LPAREN . Statement RPAREN

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 58


state 40

   12 Function: FUNCTION WORD LPAREN RPAREN COLON Type LBRACKET Statements RBRACKET .

    $default  reduce using rule 12 (Function)


state 41

   46 Statement: TWOMINUS . WORD

    WORD  shift, and go to state 59


state 42

   44 Statement: TWOPLUS . WORD

    WORD  shift, and go to state 60


state 43

   22 Statement: TRUE .

    $default  reduce using rule 22 (Statement)


state 44

   23 Statement: FALSE .

    $default  reduce using rule 23 (Statement)


state 45

   26 Statement: Variable .
   27          | Variable . ASSIGN Statement

    ASSIGN  shift, and go to state 61

    $default  reduce using rule 26 (Statement)


state 46

   29 Statement: FunctionCall .

    $default  reduce using rule 29 (Statement)


state 47

   16 Statements: Statements Statement .
   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68

    $default  reduce using rule 16 (Statements)


state 48

   11 Function: FUNCTION WORD LPAREN Variables RPAREN COLON Type LBRACKET Statements . RBRACKET
   16 Statements: Statements . Statement
   17           | Statements . RETURN Statement

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    RBRACKET  shift, and go to state 69
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 47


state 49

   42 Statement: WORD ASSIGN . Statement

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 70


state 50

   20 FunctionCall: WORD LINK . WORD LPAREN Arguments RPAREN
   21             | WORD LINK . WORD LPAREN RPAREN

    WORD  shift, and go to state 71


state 51

   18 FunctionCall: WORD LPAREN . Arguments RPAREN
   19             | WORD LPAREN . RPAREN

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    RPAREN    shift, and go to state 72
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    Arguments     go to state 73
    FunctionCall  go to state 46
    Statement     go to state 74


state 52

   45 Statement: WORD TWOMINUS .

    $default  reduce using rule 45 (Statement)


state 53

   43 Statement: WORD TWOPLUS .

    $default  reduce using rule 43 (Statement)


state 54

   30 Statement: IF Statement . LBRACKET Statements RBRACKET
   31          | IF Statement . LBRACKET Statements RBRACKET ELSE LBRACKET Statements RBRACKET
   32          | Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    PLUS      shift, and go to state 62
    MINUS     shift, and go to state 63
    TIMES     shift, and go to state 64
    EQUALS    shift, and go to state 65
    GREATER   shift, and go to state 66
    LESSER    shift, and go to state 67
    NOT       shift, and go to state 68
    LBRACKET  shift, and go to state 75


state 55

   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   35          | FOR Statement . END Statement END Statement LBRACKET Statements RBRACKET
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68
    END      shift, and go to state 76


state 56

   17 Statements: Statements RETURN Statement .
   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68

    $default  reduce using rule 17 (Statements)


state 57

   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   36          | WHILE Statement . LBRACKET Statements RBRACKET
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    PLUS      shift, and go to state 62
    MINUS     shift, and go to state 63
    TIMES     shift, and go to state 64
    EQUALS    shift, and go to state 65
    GREATER   shift, and go to state 66
    LESSER    shift, and go to state 67
    NOT       shift, and go to state 68
    LBRACKET  shift, and go to state 77


state 58

   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement
   41          | LPAREN Statement . RPAREN

    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68
    RPAREN   shift, and go to state 78


state 59

   46 Statement: TWOMINUS WORD .

    $default  reduce using rule 46 (Statement)


state 60

   44 Statement: TWOPLUS WORD .

    $default  reduce using rule 44 (Statement)


state 61

   27 Statement: Variable ASSIGN . Statement

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 79


state 62

   32 Statement: Statement PLUS . Statement

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 80


state 63

   33 Statement: Statement MINUS . Statement

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 81


state 64

   34 Statement: Statement TIMES . Statement

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 82


state 65

   37 Statement: Statement EQUALS . Statement

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 83


state 66

   39 Statement: Statement GREATER . Statement

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 84


state 67

   40 Statement: Statement LESSER . Statement

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 85


state 68

   38 Statement: Statement NOT . EQUALS Statement

    EQUALS  shift, and go to state 86


state 69

   11 Function: FUNCTION WORD LPAREN Variables RPAREN COLON Type LBRACKET Statements RBRACKET .

    $default  reduce using rule 11 (Function)


state 70

   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement
   42          | WORD ASSIGN Statement .

    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68

    PLUS      [reduce using rule 42 (Statement)]
    MINUS     [reduce using rule 42 (Statement)]
    TIMES     [reduce using rule 42 (Statement)]
    EQUALS    [reduce using rule 42 (Statement)]
    GREATER   [reduce using rule 42 (Statement)]
    LESSER    [reduce using rule 42 (Statement)]
    NOT       [reduce using rule 42 (Statement)]
    $default  reduce using rule 42 (Statement)


state 71

   20 FunctionCall: WORD LINK WORD . LPAREN Arguments RPAREN
   21             | WORD LINK WORD . LPAREN RPAREN

    LPAREN  shift, and go to state 87


state 72

   19 FunctionCall: WORD LPAREN RPAREN .

    $default  reduce using rule 19 (FunctionCall)


state 73

   14 Arguments: Arguments . COMMA Statement
   18 FunctionCall: WORD LPAREN Arguments . RPAREN

    RPAREN  shift, and go to state 88
    COMMA   shift, and go to state 89


state 74

   13 Arguments: Statement .
   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68

    $default  reduce using rule 13 (Arguments)


state 75

   30 Statement: IF Statement LBRACKET . Statements RBRACKET
   31          | IF Statement LBRACKET . Statements RBRACKET ELSE LBRACKET Statements RBRACKET

    $default  reduce using rule 15 (Statements)

    Statements  go to state 90


state 76

   35 Statement: FOR Statement END . Statement END Statement LBRACKET Statements RBRACKET

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 91


state 77

   36 Statement: WHILE Statement LBRACKET . Statements RBRACKET

    $default  reduce using rule 15 (Statements)

    Statements  go to state 92


state 78

   41 Statement: LPAREN Statement RPAREN .

    $default  reduce using rule 41 (Statement)


state 79

   27 Statement: Variable ASSIGN Statement .
   32          | Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68

    PLUS      [reduce using rule 27 (Statement)]
    MINUS     [reduce using rule 27 (Statement)]
    TIMES     [reduce using rule 27 (Statement)]
    EQUALS    [reduce using rule 27 (Statement)]
    GREATER   [reduce using rule 27 (Statement)]
    LESSER    [reduce using rule 27 (Statement)]
    NOT       [reduce using rule 27 (Statement)]
    $default  reduce using rule 27 (Statement)


state 80

   32 Statement: Statement . PLUS Statement
   32          | Statement PLUS Statement .
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68

    EQUALS    [reduce using rule 32 (Statement)]
    GREATER   [reduce using rule 32 (Statement)]
    LESSER    [reduce using rule 32 (Statement)]
    NOT       [reduce using rule 32 (Statement)]
    $default  reduce using rule 32 (Statement)


state 81

   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   33          | Statement MINUS Statement .
   34          | Statement . TIMES Statement
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68

    EQUALS    [reduce using rule 33 (Statement)]
    GREATER   [reduce using rule 33 (Statement)]
    LESSER    [reduce using rule 33 (Statement)]
    NOT       [reduce using rule 33 (Statement)]
    $default  reduce using rule 33 (Statement)


state 82

   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   34          | Statement TIMES Statement .
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68

    EQUALS    [reduce using rule 34 (Statement)]
    GREATER   [reduce using rule 34 (Statement)]
    LESSER    [reduce using rule 34 (Statement)]
    NOT       [reduce using rule 34 (Statement)]
    $default  reduce using rule 34 (Statement)


state 83

   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   37          | Statement . EQUALS Statement
   37          | Statement EQUALS Statement .
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68

    PLUS      [reduce using rule 37 (Statement)]
    MINUS     [reduce using rule 37 (Statement)]
    TIMES     [reduce using rule 37 (Statement)]
    EQUALS    [reduce using rule 37 (Statement)]
    GREATER   [reduce using rule 37 (Statement)]
    LESSER    [reduce using rule 37 (Statement)]
    NOT       [reduce using rule 37 (Statement)]
    $default  reduce using rule 37 (Statement)


state 84

   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   39          | Statement GREATER Statement .
   40          | Statement . LESSER Statement

    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68

    PLUS      [reduce using rule 39 (Statement)]
    MINUS     [reduce using rule 39 (Statement)]
    TIMES     [reduce using rule 39 (Statement)]
    EQUALS    [reduce using rule 39 (Statement)]
    GREATER   [reduce using rule 39 (Statement)]
    LESSER    [reduce using rule 39 (Statement)]
    NOT       [reduce using rule 39 (Statement)]
    $default  reduce using rule 39 (Statement)


state 85

   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement
   40          | Statement LESSER Statement .

    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68

    PLUS      [reduce using rule 40 (Statement)]
    MINUS     [reduce using rule 40 (Statement)]
    TIMES     [reduce using rule 40 (Statement)]
    EQUALS    [reduce using rule 40 (Statement)]
    GREATER   [reduce using rule 40 (Statement)]
    LESSER    [reduce using rule 40 (Statement)]
    NOT       [reduce using rule 40 (Statement)]
    $default  reduce using rule 40 (Statement)


state 86

   38 Statement: Statement NOT EQUALS . Statement

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 93


state 87

   20 FunctionCall: WORD LINK WORD LPAREN . Arguments RPAREN
   21             | WORD LINK WORD LPAREN . RPAREN

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    RPAREN    shift, and go to state 94
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    Arguments     go to state 95
    FunctionCall  go to state 46
    Statement     go to state 74


state 88

   18 FunctionCall: WORD LPAREN Arguments RPAREN .

    $default  reduce using rule 18 (FunctionCall)


state 89

   14 Arguments: Arguments COMMA . Statement

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 96


state 90

   16 Statements: Statements . Statement
   17           | Statements . RETURN Statement
   30 Statement: IF Statement LBRACKET Statements . RBRACKET
   31          | IF Statement LBRACKET Statements . RBRACKET ELSE LBRACKET Statements RBRACKET

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    RBRACKET  shift, and go to state 97
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 47


state 91

   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   35          | FOR Statement END Statement . END Statement LBRACKET Statements RBRACKET
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68
    END      shift, and go to state 98


state 92

   16 Statements: Statements . Statement
   17           | Statements . RETURN Statement
   36 Statement: WHILE Statement LBRACKET Statements . RBRACKET

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    RBRACKET  shift, and go to state 99
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 47


state 93

   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   38          | Statement NOT EQUALS Statement .
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68

    PLUS      [reduce using rule 38 (Statement)]
    MINUS     [reduce using rule 38 (Statement)]
    TIMES     [reduce using rule 38 (Statement)]
    EQUALS    [reduce using rule 38 (Statement)]
    GREATER   [reduce using rule 38 (Statement)]
    LESSER    [reduce using rule 38 (Statement)]
    NOT       [reduce using rule 38 (Statement)]
    $default  reduce using rule 38 (Statement)


state 94

   21 FunctionCall: WORD LINK WORD LPAREN RPAREN .

    $default  reduce using rule 21 (FunctionCall)


state 95

   14 Arguments: Arguments . COMMA Statement
   20 FunctionCall: WORD LINK WORD LPAREN Arguments . RPAREN

    RPAREN  shift, and go to state 100
    COMMA   shift, and go to state 89


state 96

   14 Arguments: Arguments COMMA Statement .
   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    PLUS     shift, and go to state 62
    MINUS    shift, and go to state 63
    TIMES    shift, and go to state 64
    EQUALS   shift, and go to state 65
    GREATER  shift, and go to state 66
    LESSER   shift, and go to state 67
    NOT      shift, and go to state 68

    $default  reduce using rule 14 (Arguments)


state 97

   30 Statement: IF Statement LBRACKET Statements RBRACKET .
   31          | IF Statement LBRACKET Statements RBRACKET . ELSE LBRACKET Statements RBRACKET

    ELSE  shift, and go to state 101

    $default  reduce using rule 30 (Statement)


state 98

   35 Statement: FOR Statement END Statement END . Statement LBRACKET Statements RBRACKET

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 102


state 99

   36 Statement: WHILE Statement LBRACKET Statements RBRACKET .

    $default  reduce using rule 36 (Statement)


state 100

   20 FunctionCall: WORD LINK WORD LPAREN Arguments RPAREN .

    $default  reduce using rule 20 (FunctionCall)


state 101

   31 Statement: IF Statement LBRACKET Statements RBRACKET ELSE . LBRACKET Statements RBRACKET

    LBRACKET  shift, and go to state 103


state 102

   32 Statement: Statement . PLUS Statement
   33          | Statement . MINUS Statement
   34          | Statement . TIMES Statement
   35          | FOR Statement END Statement END Statement . LBRACKET Statements RBRACKET
   37          | Statement . EQUALS Statement
   38          | Statement . NOT EQUALS Statement
   39          | Statement . GREATER Statement
   40          | Statement . LESSER Statement

    PLUS      shift, and go to state 62
    MINUS     shift, and go to state 63
    TIMES     shift, and go to state 64
    EQUALS    shift, and go to state 65
    GREATER   shift, and go to state 66
    LESSER    shift, and go to state 67
    NOT       shift, and go to state 68
    LBRACKET  shift, and go to state 104


state 103

   31 Statement: IF Statement LBRACKET Statements RBRACKET ELSE LBRACKET . Statements RBRACKET

    $default  reduce using rule 15 (Statements)

    Statements  go to state 105


state 104

   35 Statement: FOR Statement END Statement END Statement LBRACKET . Statements RBRACKET

    $default  reduce using rule 15 (Statements)

    Statements  go to state 106


state 105

   16 Statements: Statements . Statement
   17           | Statements . RETURN Statement
   31 Statement: IF Statement LBRACKET Statements RBRACKET ELSE LBRACKET Statements . RBRACKET

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    RBRACKET  shift, and go to state 107
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 47


state 106

   16 Statements: Statements . Statement
   17           | Statements . RETURN Statement
   35 Statement: FOR Statement END Statement END Statement LBRACKET Statements . RBRACKET

    WORD      shift, and go to state 32
    STRING    shift, and go to state 33
    INT       shift, and go to state 34
    IF        shift, and go to state 35
    FOR       shift, and go to state 36
    RETURN    shift, and go to state 37
    WHILE     shift, and go to state 38
    LPAREN    shift, and go to state 39
    RBRACKET  shift, and go to state 108
    TWOMINUS  shift, and go to state 41
    TWOPLUS   shift, and go to state 42
    TRUE      shift, and go to state 43
    FALSE     shift, and go to state 44
    VARIABLE  shift, and go to state 12

    Variable      go to state 45
    FunctionCall  go to state 46
    Statement     go to state 47


state 107

   31 Statement: IF Statement LBRACKET Statements RBRACKET ELSE LBRACKET Statements RBRACKET .

    $default  reduce using rule 31 (Statement)


state 108

   35 Statement: FOR Statement END Statement END Statement LBRACKET Statements RBRACKET .

    $default  reduce using rule 35 (Statement)
