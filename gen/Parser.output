Terminals unused in grammar

   REAL
   PLUS
   MINUS
   TIMES
   DIVIDE
   POWER
   EQUALS
   FUNCTION
   CONST
   NEG


Grammar

    0 $accept: Program $end

    1 Program: /* empty */
    2        | Program Declaration
    3        | Program Statement END

    4 Structure: STRUCT WORD LBRACKET Declarations RBRACKET

    5 Declarations: /* empty */
    6             | Declarations Declaration

    7 Declaration: Variable END
    8            | Structure

    9 Variable: VARIABLE WORD COLON TYPE_INT
   10         | VARIABLE WORD COLON TYPE_STRING

   11 Arguments: Statement
   12          | Arguments COMMA Statement

   13 Statement: INT
   14          | STRING
   15          | WORD
   16          | WORD LPAREN Arguments RPAREN
   17          | TYPE_STRING LPAREN Arguments RPAREN
   18          | LPAREN Statement RPAREN
   19          | WORD ASSIGN Statement


Terminals, with rules where they appear

$end (0) 0
error (256)
WORD (258) 4 9 10 15 16 19
STRING (259) 14
REAL (260)
INT (261) 13
PLUS (262)
MINUS (263)
TIMES (264)
DIVIDE (265)
POWER (266)
EQUALS (267)
ASSIGN (268) 19
LPAREN (269) 16 17 18
RPAREN (270) 16 17 18
LBRACKET (271) 4
RBRACKET (272) 4
COMMA (273) 12
FUNCTION (274)
VARIABLE (275) 9 10
CONST (276)
STRUCT (277) 4
TYPE_INT (278) 9
TYPE_STRING (279) 10 17
COLON (280) 9 10
END (281) 3 7
NEG (282)


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
Program (29)
    on left: 1 2 3, on right: 0 2 3
Structure (30)
    on left: 4, on right: 8
Declarations (31)
    on left: 5 6, on right: 4 6
Declaration (32)
    on left: 7 8, on right: 2 6
Variable (33)
    on left: 9 10, on right: 7
Arguments (34)
    on left: 11 12, on right: 12 16 17
Statement (35)
    on left: 13 14 15 16 17 18 19, on right: 3 11 12 18 19


state 0

    0 $accept: . Program $end

    $default  reduce using rule 1 (Program)

    Program  go to state 1


state 1

    0 $accept: Program . $end
    2 Program: Program . Declaration
    3        | Program . Statement END

    $end         shift, and go to state 2
    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    LPAREN       shift, and go to state 6
    VARIABLE     shift, and go to state 7
    STRUCT       shift, and go to state 8
    TYPE_STRING  shift, and go to state 9

    Structure    go to state 10
    Declaration  go to state 11
    Variable     go to state 12
    Statement    go to state 13


state 2

    0 $accept: Program $end .

    $default  accept


state 3

   15 Statement: WORD .
   16          | WORD . LPAREN Arguments RPAREN
   19          | WORD . ASSIGN Statement

    ASSIGN  shift, and go to state 14
    LPAREN  shift, and go to state 15

    $default  reduce using rule 15 (Statement)


state 4

   14 Statement: STRING .

    $default  reduce using rule 14 (Statement)


state 5

   13 Statement: INT .

    $default  reduce using rule 13 (Statement)


state 6

   18 Statement: LPAREN . Statement RPAREN

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    LPAREN       shift, and go to state 6
    TYPE_STRING  shift, and go to state 9

    Statement  go to state 16


state 7

    9 Variable: VARIABLE . WORD COLON TYPE_INT
   10         | VARIABLE . WORD COLON TYPE_STRING

    WORD  shift, and go to state 17


state 8

    4 Structure: STRUCT . WORD LBRACKET Declarations RBRACKET

    WORD  shift, and go to state 18


state 9

   17 Statement: TYPE_STRING . LPAREN Arguments RPAREN

    LPAREN  shift, and go to state 19


state 10

    8 Declaration: Structure .

    $default  reduce using rule 8 (Declaration)


state 11

    2 Program: Program Declaration .

    $default  reduce using rule 2 (Program)


state 12

    7 Declaration: Variable . END

    END  shift, and go to state 20


state 13

    3 Program: Program Statement . END

    END  shift, and go to state 21


state 14

   19 Statement: WORD ASSIGN . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    LPAREN       shift, and go to state 6
    TYPE_STRING  shift, and go to state 9

    Statement  go to state 22


state 15

   16 Statement: WORD LPAREN . Arguments RPAREN

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    LPAREN       shift, and go to state 6
    TYPE_STRING  shift, and go to state 9

    Arguments  go to state 23
    Statement  go to state 24


state 16

   18 Statement: LPAREN Statement . RPAREN

    RPAREN  shift, and go to state 25


state 17

    9 Variable: VARIABLE WORD . COLON TYPE_INT
   10         | VARIABLE WORD . COLON TYPE_STRING

    COLON  shift, and go to state 26


state 18

    4 Structure: STRUCT WORD . LBRACKET Declarations RBRACKET

    LBRACKET  shift, and go to state 27


state 19

   17 Statement: TYPE_STRING LPAREN . Arguments RPAREN

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    LPAREN       shift, and go to state 6
    TYPE_STRING  shift, and go to state 9

    Arguments  go to state 28
    Statement  go to state 24


state 20

    7 Declaration: Variable END .

    $default  reduce using rule 7 (Declaration)


state 21

    3 Program: Program Statement END .

    $default  reduce using rule 3 (Program)


state 22

   19 Statement: WORD ASSIGN Statement .

    $default  reduce using rule 19 (Statement)


state 23

   12 Arguments: Arguments . COMMA Statement
   16 Statement: WORD LPAREN Arguments . RPAREN

    RPAREN  shift, and go to state 29
    COMMA   shift, and go to state 30


state 24

   11 Arguments: Statement .

    $default  reduce using rule 11 (Arguments)


state 25

   18 Statement: LPAREN Statement RPAREN .

    $default  reduce using rule 18 (Statement)


state 26

    9 Variable: VARIABLE WORD COLON . TYPE_INT
   10         | VARIABLE WORD COLON . TYPE_STRING

    TYPE_INT     shift, and go to state 31
    TYPE_STRING  shift, and go to state 32


state 27

    4 Structure: STRUCT WORD LBRACKET . Declarations RBRACKET

    $default  reduce using rule 5 (Declarations)

    Declarations  go to state 33


state 28

   12 Arguments: Arguments . COMMA Statement
   17 Statement: TYPE_STRING LPAREN Arguments . RPAREN

    RPAREN  shift, and go to state 34
    COMMA   shift, and go to state 30


state 29

   16 Statement: WORD LPAREN Arguments RPAREN .

    $default  reduce using rule 16 (Statement)


state 30

   12 Arguments: Arguments COMMA . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    LPAREN       shift, and go to state 6
    TYPE_STRING  shift, and go to state 9

    Statement  go to state 35


state 31

    9 Variable: VARIABLE WORD COLON TYPE_INT .

    $default  reduce using rule 9 (Variable)


state 32

   10 Variable: VARIABLE WORD COLON TYPE_STRING .

    $default  reduce using rule 10 (Variable)


state 33

    4 Structure: STRUCT WORD LBRACKET Declarations . RBRACKET
    6 Declarations: Declarations . Declaration

    RBRACKET  shift, and go to state 36
    VARIABLE  shift, and go to state 7
    STRUCT    shift, and go to state 8

    Structure    go to state 10
    Declaration  go to state 37
    Variable     go to state 12


state 34

   17 Statement: TYPE_STRING LPAREN Arguments RPAREN .

    $default  reduce using rule 17 (Statement)


state 35

   12 Arguments: Arguments COMMA Statement .

    $default  reduce using rule 12 (Arguments)


state 36

    4 Structure: STRUCT WORD LBRACKET Declarations RBRACKET .

    $default  reduce using rule 4 (Structure)


state 37

    6 Declarations: Declarations Declaration .

    $default  reduce using rule 6 (Declarations)
