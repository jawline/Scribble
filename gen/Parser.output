Terminals unused in grammar

   REAL
   MINUS
   TIMES
   DIVIDE
   POWER
   FUNCTION
   CONST
   STRUCT
   NEG


State 3 conflicts: 1 shift/reduce
State 25 conflicts: 4 shift/reduce
State 33 conflicts: 4 shift/reduce
State 34 conflicts: 3 shift/reduce
State 35 conflicts: 4 shift/reduce
State 36 conflicts: 4 shift/reduce
State 37 conflicts: 4 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: /* empty */
    2        | Program Statement

    3 Variable: VARIABLE WORD COLON TYPE_INT
    4         | VARIABLE WORD COLON TYPE_STRING

    5 Arguments: Statement
    6          | Arguments COMMA Statement

    7 Statements: /* empty */
    8           | Statements Statement

    9 Statement: INT
   10          | STRING
   11          | Variable
   12          | Variable ASSIGN Statement
   13          | WORD
   14          | IF Statement LBRACKET Statements RBRACKET
   15          | IF Statement LBRACKET Statements RBRACKET ELSE LBRACKET Statements RBRACKET
   16          | Statement PLUS Statement
   17          | FOR Statement END Statement END Statement LBRACKET Statements RBRACKET
   18          | WORD LPAREN Arguments RPAREN
   19          | Statement EQUALS Statement
   20          | Statement GREATER Statement
   21          | Statement LESSER Statement
   22          | TYPE_STRING LPAREN Arguments RPAREN
   23          | LPAREN Statement RPAREN
   24          | WORD ASSIGN Statement


Terminals, with rules where they appear

$end (0) 0
error (256)
WORD (258) 3 4 13 18 24
STRING (259) 10
REAL (260)
INT (261) 9
PLUS (262) 16
MINUS (263)
TIMES (264)
DIVIDE (265)
POWER (266)
EQUALS (267) 19
ASSIGN (268) 12 24
IF (269) 14 15
ELSE (270) 15
GREATER (271) 20
LESSER (272) 21
FOR (273) 17
LPAREN (274) 18 22 23
RPAREN (275) 18 22 23
LBRACKET (276) 14 15 17
RBRACKET (277) 14 15 17
COMMA (278) 6
FUNCTION (279)
VARIABLE (280) 3 4
CONST (281)
STRUCT (282)
TYPE_INT (283) 3
TYPE_STRING (284) 4 22
COLON (285) 3 4
END (286) 17
NEG (287)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
Program (34)
    on left: 1 2, on right: 0 2
Variable (35)
    on left: 3 4, on right: 11 12
Arguments (36)
    on left: 5 6, on right: 6 18 22
Statements (37)
    on left: 7 8, on right: 8 14 15 17
Statement (38)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24, on right:
    2 5 6 8 12 14 15 16 17 19 20 21 23 24


state 0

    0 $accept: . Program $end

    $default  reduce using rule 1 (Program)

    Program  go to state 1


state 1

    0 $accept: Program . $end
    2 Program: Program . Statement

    $end         shift, and go to state 2
    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 12


state 2

    0 $accept: Program $end .

    $default  accept


state 3

   13 Statement: WORD .
   18          | WORD . LPAREN Arguments RPAREN
   24          | WORD . ASSIGN Statement

    ASSIGN  shift, and go to state 13
    LPAREN  shift, and go to state 14

    LPAREN    [reduce using rule 13 (Statement)]
    $default  reduce using rule 13 (Statement)


state 4

   10 Statement: STRING .

    $default  reduce using rule 10 (Statement)


state 5

    9 Statement: INT .

    $default  reduce using rule 9 (Statement)


state 6

   14 Statement: IF . Statement LBRACKET Statements RBRACKET
   15          | IF . Statement LBRACKET Statements RBRACKET ELSE LBRACKET Statements RBRACKET

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 15


state 7

   17 Statement: FOR . Statement END Statement END Statement LBRACKET Statements RBRACKET

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 16


state 8

   23 Statement: LPAREN . Statement RPAREN

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 17


state 9

    3 Variable: VARIABLE . WORD COLON TYPE_INT
    4         | VARIABLE . WORD COLON TYPE_STRING

    WORD  shift, and go to state 18


state 10

   22 Statement: TYPE_STRING . LPAREN Arguments RPAREN

    LPAREN  shift, and go to state 19


state 11

   11 Statement: Variable .
   12          | Variable . ASSIGN Statement

    ASSIGN  shift, and go to state 20

    $default  reduce using rule 11 (Statement)


state 12

    2 Program: Program Statement .
   16 Statement: Statement . PLUS Statement
   19          | Statement . EQUALS Statement
   20          | Statement . GREATER Statement
   21          | Statement . LESSER Statement

    PLUS     shift, and go to state 21
    EQUALS   shift, and go to state 22
    GREATER  shift, and go to state 23
    LESSER   shift, and go to state 24

    $default  reduce using rule 2 (Program)


state 13

   24 Statement: WORD ASSIGN . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 25


state 14

   18 Statement: WORD LPAREN . Arguments RPAREN

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Arguments  go to state 26
    Statement  go to state 27


state 15

   14 Statement: IF Statement . LBRACKET Statements RBRACKET
   15          | IF Statement . LBRACKET Statements RBRACKET ELSE LBRACKET Statements RBRACKET
   16          | Statement . PLUS Statement
   19          | Statement . EQUALS Statement
   20          | Statement . GREATER Statement
   21          | Statement . LESSER Statement

    PLUS      shift, and go to state 21
    EQUALS    shift, and go to state 22
    GREATER   shift, and go to state 23
    LESSER    shift, and go to state 24
    LBRACKET  shift, and go to state 28


state 16

   16 Statement: Statement . PLUS Statement
   17          | FOR Statement . END Statement END Statement LBRACKET Statements RBRACKET
   19          | Statement . EQUALS Statement
   20          | Statement . GREATER Statement
   21          | Statement . LESSER Statement

    PLUS     shift, and go to state 21
    EQUALS   shift, and go to state 22
    GREATER  shift, and go to state 23
    LESSER   shift, and go to state 24
    END      shift, and go to state 29


state 17

   16 Statement: Statement . PLUS Statement
   19          | Statement . EQUALS Statement
   20          | Statement . GREATER Statement
   21          | Statement . LESSER Statement
   23          | LPAREN Statement . RPAREN

    PLUS     shift, and go to state 21
    EQUALS   shift, and go to state 22
    GREATER  shift, and go to state 23
    LESSER   shift, and go to state 24
    RPAREN   shift, and go to state 30


state 18

    3 Variable: VARIABLE WORD . COLON TYPE_INT
    4         | VARIABLE WORD . COLON TYPE_STRING

    COLON  shift, and go to state 31


state 19

   22 Statement: TYPE_STRING LPAREN . Arguments RPAREN

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Arguments  go to state 32
    Statement  go to state 27


state 20

   12 Statement: Variable ASSIGN . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 33


state 21

   16 Statement: Statement PLUS . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 34


state 22

   19 Statement: Statement EQUALS . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 35


state 23

   20 Statement: Statement GREATER . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 36


state 24

   21 Statement: Statement LESSER . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 37


state 25

   16 Statement: Statement . PLUS Statement
   19          | Statement . EQUALS Statement
   20          | Statement . GREATER Statement
   21          | Statement . LESSER Statement
   24          | WORD ASSIGN Statement .

    PLUS     shift, and go to state 21
    EQUALS   shift, and go to state 22
    GREATER  shift, and go to state 23
    LESSER   shift, and go to state 24

    PLUS      [reduce using rule 24 (Statement)]
    EQUALS    [reduce using rule 24 (Statement)]
    GREATER   [reduce using rule 24 (Statement)]
    LESSER    [reduce using rule 24 (Statement)]
    $default  reduce using rule 24 (Statement)


state 26

    6 Arguments: Arguments . COMMA Statement
   18 Statement: WORD LPAREN Arguments . RPAREN

    RPAREN  shift, and go to state 38
    COMMA   shift, and go to state 39


state 27

    5 Arguments: Statement .
   16 Statement: Statement . PLUS Statement
   19          | Statement . EQUALS Statement
   20          | Statement . GREATER Statement
   21          | Statement . LESSER Statement

    PLUS     shift, and go to state 21
    EQUALS   shift, and go to state 22
    GREATER  shift, and go to state 23
    LESSER   shift, and go to state 24

    $default  reduce using rule 5 (Arguments)


state 28

   14 Statement: IF Statement LBRACKET . Statements RBRACKET
   15          | IF Statement LBRACKET . Statements RBRACKET ELSE LBRACKET Statements RBRACKET

    $default  reduce using rule 7 (Statements)

    Statements  go to state 40


state 29

   17 Statement: FOR Statement END . Statement END Statement LBRACKET Statements RBRACKET

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 41


state 30

   23 Statement: LPAREN Statement RPAREN .

    $default  reduce using rule 23 (Statement)


state 31

    3 Variable: VARIABLE WORD COLON . TYPE_INT
    4         | VARIABLE WORD COLON . TYPE_STRING

    TYPE_INT     shift, and go to state 42
    TYPE_STRING  shift, and go to state 43


state 32

    6 Arguments: Arguments . COMMA Statement
   22 Statement: TYPE_STRING LPAREN Arguments . RPAREN

    RPAREN  shift, and go to state 44
    COMMA   shift, and go to state 39


state 33

   12 Statement: Variable ASSIGN Statement .
   16          | Statement . PLUS Statement
   19          | Statement . EQUALS Statement
   20          | Statement . GREATER Statement
   21          | Statement . LESSER Statement

    PLUS     shift, and go to state 21
    EQUALS   shift, and go to state 22
    GREATER  shift, and go to state 23
    LESSER   shift, and go to state 24

    PLUS      [reduce using rule 12 (Statement)]
    EQUALS    [reduce using rule 12 (Statement)]
    GREATER   [reduce using rule 12 (Statement)]
    LESSER    [reduce using rule 12 (Statement)]
    $default  reduce using rule 12 (Statement)


state 34

   16 Statement: Statement . PLUS Statement
   16          | Statement PLUS Statement .
   19          | Statement . EQUALS Statement
   20          | Statement . GREATER Statement
   21          | Statement . LESSER Statement

    EQUALS   shift, and go to state 22
    GREATER  shift, and go to state 23
    LESSER   shift, and go to state 24

    EQUALS    [reduce using rule 16 (Statement)]
    GREATER   [reduce using rule 16 (Statement)]
    LESSER    [reduce using rule 16 (Statement)]
    $default  reduce using rule 16 (Statement)


state 35

   16 Statement: Statement . PLUS Statement
   19          | Statement . EQUALS Statement
   19          | Statement EQUALS Statement .
   20          | Statement . GREATER Statement
   21          | Statement . LESSER Statement

    PLUS     shift, and go to state 21
    EQUALS   shift, and go to state 22
    GREATER  shift, and go to state 23
    LESSER   shift, and go to state 24

    PLUS      [reduce using rule 19 (Statement)]
    EQUALS    [reduce using rule 19 (Statement)]
    GREATER   [reduce using rule 19 (Statement)]
    LESSER    [reduce using rule 19 (Statement)]
    $default  reduce using rule 19 (Statement)


state 36

   16 Statement: Statement . PLUS Statement
   19          | Statement . EQUALS Statement
   20          | Statement . GREATER Statement
   20          | Statement GREATER Statement .
   21          | Statement . LESSER Statement

    PLUS     shift, and go to state 21
    EQUALS   shift, and go to state 22
    GREATER  shift, and go to state 23
    LESSER   shift, and go to state 24

    PLUS      [reduce using rule 20 (Statement)]
    EQUALS    [reduce using rule 20 (Statement)]
    GREATER   [reduce using rule 20 (Statement)]
    LESSER    [reduce using rule 20 (Statement)]
    $default  reduce using rule 20 (Statement)


state 37

   16 Statement: Statement . PLUS Statement
   19          | Statement . EQUALS Statement
   20          | Statement . GREATER Statement
   21          | Statement . LESSER Statement
   21          | Statement LESSER Statement .

    PLUS     shift, and go to state 21
    EQUALS   shift, and go to state 22
    GREATER  shift, and go to state 23
    LESSER   shift, and go to state 24

    PLUS      [reduce using rule 21 (Statement)]
    EQUALS    [reduce using rule 21 (Statement)]
    GREATER   [reduce using rule 21 (Statement)]
    LESSER    [reduce using rule 21 (Statement)]
    $default  reduce using rule 21 (Statement)


state 38

   18 Statement: WORD LPAREN Arguments RPAREN .

    $default  reduce using rule 18 (Statement)


state 39

    6 Arguments: Arguments COMMA . Statement

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 45


state 40

    8 Statements: Statements . Statement
   14 Statement: IF Statement LBRACKET Statements . RBRACKET
   15          | IF Statement LBRACKET Statements . RBRACKET ELSE LBRACKET Statements RBRACKET

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    RBRACKET     shift, and go to state 46
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 47


state 41

   16 Statement: Statement . PLUS Statement
   17          | FOR Statement END Statement . END Statement LBRACKET Statements RBRACKET
   19          | Statement . EQUALS Statement
   20          | Statement . GREATER Statement
   21          | Statement . LESSER Statement

    PLUS     shift, and go to state 21
    EQUALS   shift, and go to state 22
    GREATER  shift, and go to state 23
    LESSER   shift, and go to state 24
    END      shift, and go to state 48


state 42

    3 Variable: VARIABLE WORD COLON TYPE_INT .

    $default  reduce using rule 3 (Variable)


state 43

    4 Variable: VARIABLE WORD COLON TYPE_STRING .

    $default  reduce using rule 4 (Variable)


state 44

   22 Statement: TYPE_STRING LPAREN Arguments RPAREN .

    $default  reduce using rule 22 (Statement)


state 45

    6 Arguments: Arguments COMMA Statement .
   16 Statement: Statement . PLUS Statement
   19          | Statement . EQUALS Statement
   20          | Statement . GREATER Statement
   21          | Statement . LESSER Statement

    PLUS     shift, and go to state 21
    EQUALS   shift, and go to state 22
    GREATER  shift, and go to state 23
    LESSER   shift, and go to state 24

    $default  reduce using rule 6 (Arguments)


state 46

   14 Statement: IF Statement LBRACKET Statements RBRACKET .
   15          | IF Statement LBRACKET Statements RBRACKET . ELSE LBRACKET Statements RBRACKET

    ELSE  shift, and go to state 49

    $default  reduce using rule 14 (Statement)


state 47

    8 Statements: Statements Statement .
   16 Statement: Statement . PLUS Statement
   19          | Statement . EQUALS Statement
   20          | Statement . GREATER Statement
   21          | Statement . LESSER Statement

    PLUS     shift, and go to state 21
    EQUALS   shift, and go to state 22
    GREATER  shift, and go to state 23
    LESSER   shift, and go to state 24

    $default  reduce using rule 8 (Statements)


state 48

   17 Statement: FOR Statement END Statement END . Statement LBRACKET Statements RBRACKET

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 50


state 49

   15 Statement: IF Statement LBRACKET Statements RBRACKET ELSE . LBRACKET Statements RBRACKET

    LBRACKET  shift, and go to state 51


state 50

   16 Statement: Statement . PLUS Statement
   17          | FOR Statement END Statement END Statement . LBRACKET Statements RBRACKET
   19          | Statement . EQUALS Statement
   20          | Statement . GREATER Statement
   21          | Statement . LESSER Statement

    PLUS      shift, and go to state 21
    EQUALS    shift, and go to state 22
    GREATER   shift, and go to state 23
    LESSER    shift, and go to state 24
    LBRACKET  shift, and go to state 52


state 51

   15 Statement: IF Statement LBRACKET Statements RBRACKET ELSE LBRACKET . Statements RBRACKET

    $default  reduce using rule 7 (Statements)

    Statements  go to state 53


state 52

   17 Statement: FOR Statement END Statement END Statement LBRACKET . Statements RBRACKET

    $default  reduce using rule 7 (Statements)

    Statements  go to state 54


state 53

    8 Statements: Statements . Statement
   15 Statement: IF Statement LBRACKET Statements RBRACKET ELSE LBRACKET Statements . RBRACKET

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    RBRACKET     shift, and go to state 55
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 47


state 54

    8 Statements: Statements . Statement
   17 Statement: FOR Statement END Statement END Statement LBRACKET Statements . RBRACKET

    WORD         shift, and go to state 3
    STRING       shift, and go to state 4
    INT          shift, and go to state 5
    IF           shift, and go to state 6
    FOR          shift, and go to state 7
    LPAREN       shift, and go to state 8
    RBRACKET     shift, and go to state 56
    VARIABLE     shift, and go to state 9
    TYPE_STRING  shift, and go to state 10

    Variable   go to state 11
    Statement  go to state 47


state 55

   15 Statement: IF Statement LBRACKET Statements RBRACKET ELSE LBRACKET Statements RBRACKET .

    $default  reduce using rule 15 (Statement)


state 56

   17 Statement: FOR Statement END Statement END Statement LBRACKET Statements RBRACKET .

    $default  reduce using rule 17 (Statement)
