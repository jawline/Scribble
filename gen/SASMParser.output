Terminals unused in grammar

   WORD
   REAL
   PUSH
   POP


Grammar

    0 $accept: Program $end

    1 Program: /* empty */
    2        | Program CALL_FN STRING
    3        | Program RETURN
    4        | Program ARRAY_SET REG REG REG
    5        | Program ARRAY_GET REG REG REG
    6        | Program ARRAY_LENGTH REG REG
    7        | Program NEW_ARRAY STRING INT REG
    8        | Program PUSH_REGISTERS REG INT
    9        | Program POP_REGISTERS REG INT
   10        | Program POP_NIL
   11        | Program NEW_ARRAY STRING REG REG
   12        | Program LOAD INT REG
   13        | Program LOAD LONG REG
   14        | Program LOAD STRING REG
   15        | Program MOVE REG REG
   16        | Program ADD REG REG REG
   17        | Program ADD REG INT REG
   18        | Program ADD INT INT REG
   19        | Program SUBTRACT REG REG REG
   20        | Program SUBTRACT REG INT REG
   21        | Program SUBTRACT INT INT REG
   22        | Program MULTIPLY REG REG REG
   23        | Program MULTIPLY REG INT REG
   24        | Program MULTIPLY INT INT REG
   25        | Program DIVIDE REG REG REG
   26        | Program DIVIDE REG INT REG
   27        | Program DIVIDE INT INT REG
   28        | Program TEST_EQUAL REG REG
   29        | Program TEST_EQUAL REG INT
   30        | Program TEST_NOT_EQUAL REG REG
   31        | Program TEST_NOT_EQUAL REG INT
   32        | Program LESS_THAN REG REG
   33        | Program LESS_THAN REG INT
   34        | Program GREATER_THAN REG REG
   35        | Program GREATER_THAN REG INT
   36        | Program LESS_THAN_OR_EQUAL REG REG
   37        | Program LESS_THAN_OR_EQUAL REG INT
   38        | Program GREATER_THAN_OR_EQUAL REG REG
   39        | Program GREATER_THAN_OR_EQUAL REG INT
   40        | Program JUMP INT
   41        | Program JUMP_RELATIVE INT
   42        | Program JUMP REG
   43        | Program JUMP_RELATIVE REG


Terminals, with rules where they appear

$end (0) 0
error (256)
WORD (258)
STRING (259) 2 7 11 14
REAL (260)
INT (261) 7 8 9 12 17 18 20 21 23 24 26 27 29 31 33 35 37 39 40 41
REG (262) 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28 29 30 31 32 33 34 35 36 37 38 39 42 43
LONG (263) 13
PUSH_REGISTERS (264) 8
POP_REGISTERS (265) 9
POP_NIL (266) 10
JUMP_RELATIVE (267) 41 43
CALL_FN (268) 2
LOAD (269) 12 13 14
ADD (270) 16 17 18
PUSH (271)
POP (272)
MOVE (273) 15
TEST_EQUAL (274) 28 29
ARRAY_LENGTH (275) 6
TEST_NOT_EQUAL (276) 30 31
JUMP (277) 40 42
RETURN (278) 3
LESS_THAN (279) 32 33
LESS_THAN_OR_EQUAL (280) 36 37
ARRAY_SET (281) 4
ARRAY_GET (282) 5
GREATER_THAN (283) 34 35
GREATER_THAN_OR_EQUAL (284) 38 39
SUBTRACT (285) 19 20 21
MULTIPLY (286) 22 23 24
DIVIDE (287) 25 26 27
NEW_ARRAY (288) 7 11


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
Program (35)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
    22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
    43, on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
    21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
    42 43


state 0

    0 $accept: . Program $end

    $default  reduce using rule 1 (Program)

    Program  go to state 1


state 1

    0 $accept: Program . $end
    2 Program: Program . CALL_FN STRING
    3        | Program . RETURN
    4        | Program . ARRAY_SET REG REG REG
    5        | Program . ARRAY_GET REG REG REG
    6        | Program . ARRAY_LENGTH REG REG
    7        | Program . NEW_ARRAY STRING INT REG
    8        | Program . PUSH_REGISTERS REG INT
    9        | Program . POP_REGISTERS REG INT
   10        | Program . POP_NIL
   11        | Program . NEW_ARRAY STRING REG REG
   12        | Program . LOAD INT REG
   13        | Program . LOAD LONG REG
   14        | Program . LOAD STRING REG
   15        | Program . MOVE REG REG
   16        | Program . ADD REG REG REG
   17        | Program . ADD REG INT REG
   18        | Program . ADD INT INT REG
   19        | Program . SUBTRACT REG REG REG
   20        | Program . SUBTRACT REG INT REG
   21        | Program . SUBTRACT INT INT REG
   22        | Program . MULTIPLY REG REG REG
   23        | Program . MULTIPLY REG INT REG
   24        | Program . MULTIPLY INT INT REG
   25        | Program . DIVIDE REG REG REG
   26        | Program . DIVIDE REG INT REG
   27        | Program . DIVIDE INT INT REG
   28        | Program . TEST_EQUAL REG REG
   29        | Program . TEST_EQUAL REG INT
   30        | Program . TEST_NOT_EQUAL REG REG
   31        | Program . TEST_NOT_EQUAL REG INT
   32        | Program . LESS_THAN REG REG
   33        | Program . LESS_THAN REG INT
   34        | Program . GREATER_THAN REG REG
   35        | Program . GREATER_THAN REG INT
   36        | Program . LESS_THAN_OR_EQUAL REG REG
   37        | Program . LESS_THAN_OR_EQUAL REG INT
   38        | Program . GREATER_THAN_OR_EQUAL REG REG
   39        | Program . GREATER_THAN_OR_EQUAL REG INT
   40        | Program . JUMP INT
   41        | Program . JUMP_RELATIVE INT
   42        | Program . JUMP REG
   43        | Program . JUMP_RELATIVE REG

    $end                   shift, and go to state 2
    PUSH_REGISTERS         shift, and go to state 3
    POP_REGISTERS          shift, and go to state 4
    POP_NIL                shift, and go to state 5
    JUMP_RELATIVE          shift, and go to state 6
    CALL_FN                shift, and go to state 7
    LOAD                   shift, and go to state 8
    ADD                    shift, and go to state 9
    MOVE                   shift, and go to state 10
    TEST_EQUAL             shift, and go to state 11
    ARRAY_LENGTH           shift, and go to state 12
    TEST_NOT_EQUAL         shift, and go to state 13
    JUMP                   shift, and go to state 14
    RETURN                 shift, and go to state 15
    LESS_THAN              shift, and go to state 16
    LESS_THAN_OR_EQUAL     shift, and go to state 17
    ARRAY_SET              shift, and go to state 18
    ARRAY_GET              shift, and go to state 19
    GREATER_THAN           shift, and go to state 20
    GREATER_THAN_OR_EQUAL  shift, and go to state 21
    SUBTRACT               shift, and go to state 22
    MULTIPLY               shift, and go to state 23
    DIVIDE                 shift, and go to state 24
    NEW_ARRAY              shift, and go to state 25


state 2

    0 $accept: Program $end .

    $default  accept


state 3

    8 Program: Program PUSH_REGISTERS . REG INT

    REG  shift, and go to state 26


state 4

    9 Program: Program POP_REGISTERS . REG INT

    REG  shift, and go to state 27


state 5

   10 Program: Program POP_NIL .

    $default  reduce using rule 10 (Program)


state 6

   41 Program: Program JUMP_RELATIVE . INT
   43        | Program JUMP_RELATIVE . REG

    INT  shift, and go to state 28
    REG  shift, and go to state 29


state 7

    2 Program: Program CALL_FN . STRING

    STRING  shift, and go to state 30


state 8

   12 Program: Program LOAD . INT REG
   13        | Program LOAD . LONG REG
   14        | Program LOAD . STRING REG

    STRING  shift, and go to state 31
    INT     shift, and go to state 32
    LONG    shift, and go to state 33


state 9

   16 Program: Program ADD . REG REG REG
   17        | Program ADD . REG INT REG
   18        | Program ADD . INT INT REG

    INT  shift, and go to state 34
    REG  shift, and go to state 35


state 10

   15 Program: Program MOVE . REG REG

    REG  shift, and go to state 36


state 11

   28 Program: Program TEST_EQUAL . REG REG
   29        | Program TEST_EQUAL . REG INT

    REG  shift, and go to state 37


state 12

    6 Program: Program ARRAY_LENGTH . REG REG

    REG  shift, and go to state 38


state 13

   30 Program: Program TEST_NOT_EQUAL . REG REG
   31        | Program TEST_NOT_EQUAL . REG INT

    REG  shift, and go to state 39


state 14

   40 Program: Program JUMP . INT
   42        | Program JUMP . REG

    INT  shift, and go to state 40
    REG  shift, and go to state 41


state 15

    3 Program: Program RETURN .

    $default  reduce using rule 3 (Program)


state 16

   32 Program: Program LESS_THAN . REG REG
   33        | Program LESS_THAN . REG INT

    REG  shift, and go to state 42


state 17

   36 Program: Program LESS_THAN_OR_EQUAL . REG REG
   37        | Program LESS_THAN_OR_EQUAL . REG INT

    REG  shift, and go to state 43


state 18

    4 Program: Program ARRAY_SET . REG REG REG

    REG  shift, and go to state 44


state 19

    5 Program: Program ARRAY_GET . REG REG REG

    REG  shift, and go to state 45


state 20

   34 Program: Program GREATER_THAN . REG REG
   35        | Program GREATER_THAN . REG INT

    REG  shift, and go to state 46


state 21

   38 Program: Program GREATER_THAN_OR_EQUAL . REG REG
   39        | Program GREATER_THAN_OR_EQUAL . REG INT

    REG  shift, and go to state 47


state 22

   19 Program: Program SUBTRACT . REG REG REG
   20        | Program SUBTRACT . REG INT REG
   21        | Program SUBTRACT . INT INT REG

    INT  shift, and go to state 48
    REG  shift, and go to state 49


state 23

   22 Program: Program MULTIPLY . REG REG REG
   23        | Program MULTIPLY . REG INT REG
   24        | Program MULTIPLY . INT INT REG

    INT  shift, and go to state 50
    REG  shift, and go to state 51


state 24

   25 Program: Program DIVIDE . REG REG REG
   26        | Program DIVIDE . REG INT REG
   27        | Program DIVIDE . INT INT REG

    INT  shift, and go to state 52
    REG  shift, and go to state 53


state 25

    7 Program: Program NEW_ARRAY . STRING INT REG
   11        | Program NEW_ARRAY . STRING REG REG

    STRING  shift, and go to state 54


state 26

    8 Program: Program PUSH_REGISTERS REG . INT

    INT  shift, and go to state 55


state 27

    9 Program: Program POP_REGISTERS REG . INT

    INT  shift, and go to state 56


state 28

   41 Program: Program JUMP_RELATIVE INT .

    $default  reduce using rule 41 (Program)


state 29

   43 Program: Program JUMP_RELATIVE REG .

    $default  reduce using rule 43 (Program)


state 30

    2 Program: Program CALL_FN STRING .

    $default  reduce using rule 2 (Program)


state 31

   14 Program: Program LOAD STRING . REG

    REG  shift, and go to state 57


state 32

   12 Program: Program LOAD INT . REG

    REG  shift, and go to state 58


state 33

   13 Program: Program LOAD LONG . REG

    REG  shift, and go to state 59


state 34

   18 Program: Program ADD INT . INT REG

    INT  shift, and go to state 60


state 35

   16 Program: Program ADD REG . REG REG
   17        | Program ADD REG . INT REG

    INT  shift, and go to state 61
    REG  shift, and go to state 62


state 36

   15 Program: Program MOVE REG . REG

    REG  shift, and go to state 63


state 37

   28 Program: Program TEST_EQUAL REG . REG
   29        | Program TEST_EQUAL REG . INT

    INT  shift, and go to state 64
    REG  shift, and go to state 65


state 38

    6 Program: Program ARRAY_LENGTH REG . REG

    REG  shift, and go to state 66


state 39

   30 Program: Program TEST_NOT_EQUAL REG . REG
   31        | Program TEST_NOT_EQUAL REG . INT

    INT  shift, and go to state 67
    REG  shift, and go to state 68


state 40

   40 Program: Program JUMP INT .

    $default  reduce using rule 40 (Program)


state 41

   42 Program: Program JUMP REG .

    $default  reduce using rule 42 (Program)


state 42

   32 Program: Program LESS_THAN REG . REG
   33        | Program LESS_THAN REG . INT

    INT  shift, and go to state 69
    REG  shift, and go to state 70


state 43

   36 Program: Program LESS_THAN_OR_EQUAL REG . REG
   37        | Program LESS_THAN_OR_EQUAL REG . INT

    INT  shift, and go to state 71
    REG  shift, and go to state 72


state 44

    4 Program: Program ARRAY_SET REG . REG REG

    REG  shift, and go to state 73


state 45

    5 Program: Program ARRAY_GET REG . REG REG

    REG  shift, and go to state 74


state 46

   34 Program: Program GREATER_THAN REG . REG
   35        | Program GREATER_THAN REG . INT

    INT  shift, and go to state 75
    REG  shift, and go to state 76


state 47

   38 Program: Program GREATER_THAN_OR_EQUAL REG . REG
   39        | Program GREATER_THAN_OR_EQUAL REG . INT

    INT  shift, and go to state 77
    REG  shift, and go to state 78


state 48

   21 Program: Program SUBTRACT INT . INT REG

    INT  shift, and go to state 79


state 49

   19 Program: Program SUBTRACT REG . REG REG
   20        | Program SUBTRACT REG . INT REG

    INT  shift, and go to state 80
    REG  shift, and go to state 81


state 50

   24 Program: Program MULTIPLY INT . INT REG

    INT  shift, and go to state 82


state 51

   22 Program: Program MULTIPLY REG . REG REG
   23        | Program MULTIPLY REG . INT REG

    INT  shift, and go to state 83
    REG  shift, and go to state 84


state 52

   27 Program: Program DIVIDE INT . INT REG

    INT  shift, and go to state 85


state 53

   25 Program: Program DIVIDE REG . REG REG
   26        | Program DIVIDE REG . INT REG

    INT  shift, and go to state 86
    REG  shift, and go to state 87


state 54

    7 Program: Program NEW_ARRAY STRING . INT REG
   11        | Program NEW_ARRAY STRING . REG REG

    INT  shift, and go to state 88
    REG  shift, and go to state 89


state 55

    8 Program: Program PUSH_REGISTERS REG INT .

    $default  reduce using rule 8 (Program)


state 56

    9 Program: Program POP_REGISTERS REG INT .

    $default  reduce using rule 9 (Program)


state 57

   14 Program: Program LOAD STRING REG .

    $default  reduce using rule 14 (Program)


state 58

   12 Program: Program LOAD INT REG .

    $default  reduce using rule 12 (Program)


state 59

   13 Program: Program LOAD LONG REG .

    $default  reduce using rule 13 (Program)


state 60

   18 Program: Program ADD INT INT . REG

    REG  shift, and go to state 90


state 61

   17 Program: Program ADD REG INT . REG

    REG  shift, and go to state 91


state 62

   16 Program: Program ADD REG REG . REG

    REG  shift, and go to state 92


state 63

   15 Program: Program MOVE REG REG .

    $default  reduce using rule 15 (Program)


state 64

   29 Program: Program TEST_EQUAL REG INT .

    $default  reduce using rule 29 (Program)


state 65

   28 Program: Program TEST_EQUAL REG REG .

    $default  reduce using rule 28 (Program)


state 66

    6 Program: Program ARRAY_LENGTH REG REG .

    $default  reduce using rule 6 (Program)


state 67

   31 Program: Program TEST_NOT_EQUAL REG INT .

    $default  reduce using rule 31 (Program)


state 68

   30 Program: Program TEST_NOT_EQUAL REG REG .

    $default  reduce using rule 30 (Program)


state 69

   33 Program: Program LESS_THAN REG INT .

    $default  reduce using rule 33 (Program)


state 70

   32 Program: Program LESS_THAN REG REG .

    $default  reduce using rule 32 (Program)


state 71

   37 Program: Program LESS_THAN_OR_EQUAL REG INT .

    $default  reduce using rule 37 (Program)


state 72

   36 Program: Program LESS_THAN_OR_EQUAL REG REG .

    $default  reduce using rule 36 (Program)


state 73

    4 Program: Program ARRAY_SET REG REG . REG

    REG  shift, and go to state 93


state 74

    5 Program: Program ARRAY_GET REG REG . REG

    REG  shift, and go to state 94


state 75

   35 Program: Program GREATER_THAN REG INT .

    $default  reduce using rule 35 (Program)


state 76

   34 Program: Program GREATER_THAN REG REG .

    $default  reduce using rule 34 (Program)


state 77

   39 Program: Program GREATER_THAN_OR_EQUAL REG INT .

    $default  reduce using rule 39 (Program)


state 78

   38 Program: Program GREATER_THAN_OR_EQUAL REG REG .

    $default  reduce using rule 38 (Program)


state 79

   21 Program: Program SUBTRACT INT INT . REG

    REG  shift, and go to state 95


state 80

   20 Program: Program SUBTRACT REG INT . REG

    REG  shift, and go to state 96


state 81

   19 Program: Program SUBTRACT REG REG . REG

    REG  shift, and go to state 97


state 82

   24 Program: Program MULTIPLY INT INT . REG

    REG  shift, and go to state 98


state 83

   23 Program: Program MULTIPLY REG INT . REG

    REG  shift, and go to state 99


state 84

   22 Program: Program MULTIPLY REG REG . REG

    REG  shift, and go to state 100


state 85

   27 Program: Program DIVIDE INT INT . REG

    REG  shift, and go to state 101


state 86

   26 Program: Program DIVIDE REG INT . REG

    REG  shift, and go to state 102


state 87

   25 Program: Program DIVIDE REG REG . REG

    REG  shift, and go to state 103


state 88

    7 Program: Program NEW_ARRAY STRING INT . REG

    REG  shift, and go to state 104


state 89

   11 Program: Program NEW_ARRAY STRING REG . REG

    REG  shift, and go to state 105


state 90

   18 Program: Program ADD INT INT REG .

    $default  reduce using rule 18 (Program)


state 91

   17 Program: Program ADD REG INT REG .

    $default  reduce using rule 17 (Program)


state 92

   16 Program: Program ADD REG REG REG .

    $default  reduce using rule 16 (Program)


state 93

    4 Program: Program ARRAY_SET REG REG REG .

    $default  reduce using rule 4 (Program)


state 94

    5 Program: Program ARRAY_GET REG REG REG .

    $default  reduce using rule 5 (Program)


state 95

   21 Program: Program SUBTRACT INT INT REG .

    $default  reduce using rule 21 (Program)


state 96

   20 Program: Program SUBTRACT REG INT REG .

    $default  reduce using rule 20 (Program)


state 97

   19 Program: Program SUBTRACT REG REG REG .

    $default  reduce using rule 19 (Program)


state 98

   24 Program: Program MULTIPLY INT INT REG .

    $default  reduce using rule 24 (Program)


state 99

   23 Program: Program MULTIPLY REG INT REG .

    $default  reduce using rule 23 (Program)


state 100

   22 Program: Program MULTIPLY REG REG REG .

    $default  reduce using rule 22 (Program)


state 101

   27 Program: Program DIVIDE INT INT REG .

    $default  reduce using rule 27 (Program)


state 102

   26 Program: Program DIVIDE REG INT REG .

    $default  reduce using rule 26 (Program)


state 103

   25 Program: Program DIVIDE REG REG REG .

    $default  reduce using rule 25 (Program)


state 104

    7 Program: Program NEW_ARRAY STRING INT REG .

    $default  reduce using rule 7 (Program)


state 105

   11 Program: Program NEW_ARRAY STRING REG REG .

    $default  reduce using rule 11 (Program)
