Terminals unused in grammar

   WORD
   REAL
   PUSH
   POP


Grammar

    0 $accept: Program $end

    1 Program: /* empty */
    2        | Program ARRAY_SET REG REG REG
    3        | Program ARRAY_GET REG REG REG
    4        | Program NEW_ARRAY STRING INT REG
    5        | Program NEW_ARRAY STRING REG REG
    6        | Program LOAD INT REG
    7        | Program LOAD LONG REG
    8        | Program LOAD STRING REG
    9        | Program MOVE REG REG
   10        | Program ADD REG REG REG
   11        | Program ADD REG INT REG
   12        | Program ADD INT INT REG
   13        | Program SUBTRACT REG REG REG
   14        | Program SUBTRACT REG INT REG
   15        | Program SUBTRACT INT INT REG
   16        | Program MULTIPLY REG REG REG
   17        | Program MULTIPLY REG INT REG
   18        | Program MULTIPLY INT INT REG
   19        | Program DIVIDE REG REG REG
   20        | Program DIVIDE REG INT REG
   21        | Program DIVIDE INT INT REG
   22        | Program TEST_EQUAL REG REG
   23        | Program TEST_EQUAL REG INT
   24        | Program TEST_NOT_EQUAL REG REG
   25        | Program TEST_NOT_EQUAL REG INT
   26        | Program LESS_THAN REG REG
   27        | Program LESS_THAN REG INT
   28        | Program GREATER_THAN REG REG
   29        | Program GREATER_THAN REG INT
   30        | Program LESS_THAN_OR_EQUAL REG REG
   31        | Program LESS_THAN_OR_EQUAL REG INT
   32        | Program GREATER_THAN_OR_EQUAL REG REG
   33        | Program GREATER_THAN_OR_EQUAL REG INT
   34        | Program JUMP INT
   35        | Program JUMP_RELATIVE INT
   36        | Program JUMP REG
   37        | Program JUMP_RELATIVE REG
   38        | Program RETURN


Terminals, with rules where they appear

$end (0) 0
error (256)
WORD (258)
STRING (259) 4 5 8
REAL (260)
INT (261) 4 6 11 12 14 15 17 18 20 21 23 25 27 29 31 33 34 35
REG (262) 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 36 37
LONG (263) 7
JUMP_RELATIVE (264) 35 37
LOAD (265) 6 7 8
ADD (266) 10 11 12
PUSH (267)
POP (268)
MOVE (269) 9
TEST_EQUAL (270) 22 23
TEST_NOT_EQUAL (271) 24 25
JUMP (272) 34 36
RETURN (273) 38
LESS_THAN (274) 26 27
LESS_THAN_OR_EQUAL (275) 30 31
ARRAY_SET (276) 2
ARRAY_GET (277) 3
GREATER_THAN (278) 28 29
GREATER_THAN_OR_EQUAL (279) 32 33
SUBTRACT (280) 13 14 15
MULTIPLY (281) 16 17 18
DIVIDE (282) 19 20 21
NEW_ARRAY (283) 4 5


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
Program (30)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
    22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38, on right: 0
    2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28 29 30 31 32 33 34 35 36 37 38


state 0

    0 $accept: . Program $end

    $default  reduce using rule 1 (Program)

    Program  go to state 1


state 1

    0 $accept: Program . $end
    2 Program: Program . ARRAY_SET REG REG REG
    3        | Program . ARRAY_GET REG REG REG
    4        | Program . NEW_ARRAY STRING INT REG
    5        | Program . NEW_ARRAY STRING REG REG
    6        | Program . LOAD INT REG
    7        | Program . LOAD LONG REG
    8        | Program . LOAD STRING REG
    9        | Program . MOVE REG REG
   10        | Program . ADD REG REG REG
   11        | Program . ADD REG INT REG
   12        | Program . ADD INT INT REG
   13        | Program . SUBTRACT REG REG REG
   14        | Program . SUBTRACT REG INT REG
   15        | Program . SUBTRACT INT INT REG
   16        | Program . MULTIPLY REG REG REG
   17        | Program . MULTIPLY REG INT REG
   18        | Program . MULTIPLY INT INT REG
   19        | Program . DIVIDE REG REG REG
   20        | Program . DIVIDE REG INT REG
   21        | Program . DIVIDE INT INT REG
   22        | Program . TEST_EQUAL REG REG
   23        | Program . TEST_EQUAL REG INT
   24        | Program . TEST_NOT_EQUAL REG REG
   25        | Program . TEST_NOT_EQUAL REG INT
   26        | Program . LESS_THAN REG REG
   27        | Program . LESS_THAN REG INT
   28        | Program . GREATER_THAN REG REG
   29        | Program . GREATER_THAN REG INT
   30        | Program . LESS_THAN_OR_EQUAL REG REG
   31        | Program . LESS_THAN_OR_EQUAL REG INT
   32        | Program . GREATER_THAN_OR_EQUAL REG REG
   33        | Program . GREATER_THAN_OR_EQUAL REG INT
   34        | Program . JUMP INT
   35        | Program . JUMP_RELATIVE INT
   36        | Program . JUMP REG
   37        | Program . JUMP_RELATIVE REG
   38        | Program . RETURN

    $end                   shift, and go to state 2
    JUMP_RELATIVE          shift, and go to state 3
    LOAD                   shift, and go to state 4
    ADD                    shift, and go to state 5
    MOVE                   shift, and go to state 6
    TEST_EQUAL             shift, and go to state 7
    TEST_NOT_EQUAL         shift, and go to state 8
    JUMP                   shift, and go to state 9
    RETURN                 shift, and go to state 10
    LESS_THAN              shift, and go to state 11
    LESS_THAN_OR_EQUAL     shift, and go to state 12
    ARRAY_SET              shift, and go to state 13
    ARRAY_GET              shift, and go to state 14
    GREATER_THAN           shift, and go to state 15
    GREATER_THAN_OR_EQUAL  shift, and go to state 16
    SUBTRACT               shift, and go to state 17
    MULTIPLY               shift, and go to state 18
    DIVIDE                 shift, and go to state 19
    NEW_ARRAY              shift, and go to state 20


state 2

    0 $accept: Program $end .

    $default  accept


state 3

   35 Program: Program JUMP_RELATIVE . INT
   37        | Program JUMP_RELATIVE . REG

    INT  shift, and go to state 21
    REG  shift, and go to state 22


state 4

    6 Program: Program LOAD . INT REG
    7        | Program LOAD . LONG REG
    8        | Program LOAD . STRING REG

    STRING  shift, and go to state 23
    INT     shift, and go to state 24
    LONG    shift, and go to state 25


state 5

   10 Program: Program ADD . REG REG REG
   11        | Program ADD . REG INT REG
   12        | Program ADD . INT INT REG

    INT  shift, and go to state 26
    REG  shift, and go to state 27


state 6

    9 Program: Program MOVE . REG REG

    REG  shift, and go to state 28


state 7

   22 Program: Program TEST_EQUAL . REG REG
   23        | Program TEST_EQUAL . REG INT

    REG  shift, and go to state 29


state 8

   24 Program: Program TEST_NOT_EQUAL . REG REG
   25        | Program TEST_NOT_EQUAL . REG INT

    REG  shift, and go to state 30


state 9

   34 Program: Program JUMP . INT
   36        | Program JUMP . REG

    INT  shift, and go to state 31
    REG  shift, and go to state 32


state 10

   38 Program: Program RETURN .

    $default  reduce using rule 38 (Program)


state 11

   26 Program: Program LESS_THAN . REG REG
   27        | Program LESS_THAN . REG INT

    REG  shift, and go to state 33


state 12

   30 Program: Program LESS_THAN_OR_EQUAL . REG REG
   31        | Program LESS_THAN_OR_EQUAL . REG INT

    REG  shift, and go to state 34


state 13

    2 Program: Program ARRAY_SET . REG REG REG

    REG  shift, and go to state 35


state 14

    3 Program: Program ARRAY_GET . REG REG REG

    REG  shift, and go to state 36


state 15

   28 Program: Program GREATER_THAN . REG REG
   29        | Program GREATER_THAN . REG INT

    REG  shift, and go to state 37


state 16

   32 Program: Program GREATER_THAN_OR_EQUAL . REG REG
   33        | Program GREATER_THAN_OR_EQUAL . REG INT

    REG  shift, and go to state 38


state 17

   13 Program: Program SUBTRACT . REG REG REG
   14        | Program SUBTRACT . REG INT REG
   15        | Program SUBTRACT . INT INT REG

    INT  shift, and go to state 39
    REG  shift, and go to state 40


state 18

   16 Program: Program MULTIPLY . REG REG REG
   17        | Program MULTIPLY . REG INT REG
   18        | Program MULTIPLY . INT INT REG

    INT  shift, and go to state 41
    REG  shift, and go to state 42


state 19

   19 Program: Program DIVIDE . REG REG REG
   20        | Program DIVIDE . REG INT REG
   21        | Program DIVIDE . INT INT REG

    INT  shift, and go to state 43
    REG  shift, and go to state 44


state 20

    4 Program: Program NEW_ARRAY . STRING INT REG
    5        | Program NEW_ARRAY . STRING REG REG

    STRING  shift, and go to state 45


state 21

   35 Program: Program JUMP_RELATIVE INT .

    $default  reduce using rule 35 (Program)


state 22

   37 Program: Program JUMP_RELATIVE REG .

    $default  reduce using rule 37 (Program)


state 23

    8 Program: Program LOAD STRING . REG

    REG  shift, and go to state 46


state 24

    6 Program: Program LOAD INT . REG

    REG  shift, and go to state 47


state 25

    7 Program: Program LOAD LONG . REG

    REG  shift, and go to state 48


state 26

   12 Program: Program ADD INT . INT REG

    INT  shift, and go to state 49


state 27

   10 Program: Program ADD REG . REG REG
   11        | Program ADD REG . INT REG

    INT  shift, and go to state 50
    REG  shift, and go to state 51


state 28

    9 Program: Program MOVE REG . REG

    REG  shift, and go to state 52


state 29

   22 Program: Program TEST_EQUAL REG . REG
   23        | Program TEST_EQUAL REG . INT

    INT  shift, and go to state 53
    REG  shift, and go to state 54


state 30

   24 Program: Program TEST_NOT_EQUAL REG . REG
   25        | Program TEST_NOT_EQUAL REG . INT

    INT  shift, and go to state 55
    REG  shift, and go to state 56


state 31

   34 Program: Program JUMP INT .

    $default  reduce using rule 34 (Program)


state 32

   36 Program: Program JUMP REG .

    $default  reduce using rule 36 (Program)


state 33

   26 Program: Program LESS_THAN REG . REG
   27        | Program LESS_THAN REG . INT

    INT  shift, and go to state 57
    REG  shift, and go to state 58


state 34

   30 Program: Program LESS_THAN_OR_EQUAL REG . REG
   31        | Program LESS_THAN_OR_EQUAL REG . INT

    INT  shift, and go to state 59
    REG  shift, and go to state 60


state 35

    2 Program: Program ARRAY_SET REG . REG REG

    REG  shift, and go to state 61


state 36

    3 Program: Program ARRAY_GET REG . REG REG

    REG  shift, and go to state 62


state 37

   28 Program: Program GREATER_THAN REG . REG
   29        | Program GREATER_THAN REG . INT

    INT  shift, and go to state 63
    REG  shift, and go to state 64


state 38

   32 Program: Program GREATER_THAN_OR_EQUAL REG . REG
   33        | Program GREATER_THAN_OR_EQUAL REG . INT

    INT  shift, and go to state 65
    REG  shift, and go to state 66


state 39

   15 Program: Program SUBTRACT INT . INT REG

    INT  shift, and go to state 67


state 40

   13 Program: Program SUBTRACT REG . REG REG
   14        | Program SUBTRACT REG . INT REG

    INT  shift, and go to state 68
    REG  shift, and go to state 69


state 41

   18 Program: Program MULTIPLY INT . INT REG

    INT  shift, and go to state 70


state 42

   16 Program: Program MULTIPLY REG . REG REG
   17        | Program MULTIPLY REG . INT REG

    INT  shift, and go to state 71
    REG  shift, and go to state 72


state 43

   21 Program: Program DIVIDE INT . INT REG

    INT  shift, and go to state 73


state 44

   19 Program: Program DIVIDE REG . REG REG
   20        | Program DIVIDE REG . INT REG

    INT  shift, and go to state 74
    REG  shift, and go to state 75


state 45

    4 Program: Program NEW_ARRAY STRING . INT REG
    5        | Program NEW_ARRAY STRING . REG REG

    INT  shift, and go to state 76
    REG  shift, and go to state 77


state 46

    8 Program: Program LOAD STRING REG .

    $default  reduce using rule 8 (Program)


state 47

    6 Program: Program LOAD INT REG .

    $default  reduce using rule 6 (Program)


state 48

    7 Program: Program LOAD LONG REG .

    $default  reduce using rule 7 (Program)


state 49

   12 Program: Program ADD INT INT . REG

    REG  shift, and go to state 78


state 50

   11 Program: Program ADD REG INT . REG

    REG  shift, and go to state 79


state 51

   10 Program: Program ADD REG REG . REG

    REG  shift, and go to state 80


state 52

    9 Program: Program MOVE REG REG .

    $default  reduce using rule 9 (Program)


state 53

   23 Program: Program TEST_EQUAL REG INT .

    $default  reduce using rule 23 (Program)


state 54

   22 Program: Program TEST_EQUAL REG REG .

    $default  reduce using rule 22 (Program)


state 55

   25 Program: Program TEST_NOT_EQUAL REG INT .

    $default  reduce using rule 25 (Program)


state 56

   24 Program: Program TEST_NOT_EQUAL REG REG .

    $default  reduce using rule 24 (Program)


state 57

   27 Program: Program LESS_THAN REG INT .

    $default  reduce using rule 27 (Program)


state 58

   26 Program: Program LESS_THAN REG REG .

    $default  reduce using rule 26 (Program)


state 59

   31 Program: Program LESS_THAN_OR_EQUAL REG INT .

    $default  reduce using rule 31 (Program)


state 60

   30 Program: Program LESS_THAN_OR_EQUAL REG REG .

    $default  reduce using rule 30 (Program)


state 61

    2 Program: Program ARRAY_SET REG REG . REG

    REG  shift, and go to state 81


state 62

    3 Program: Program ARRAY_GET REG REG . REG

    REG  shift, and go to state 82


state 63

   29 Program: Program GREATER_THAN REG INT .

    $default  reduce using rule 29 (Program)


state 64

   28 Program: Program GREATER_THAN REG REG .

    $default  reduce using rule 28 (Program)


state 65

   33 Program: Program GREATER_THAN_OR_EQUAL REG INT .

    $default  reduce using rule 33 (Program)


state 66

   32 Program: Program GREATER_THAN_OR_EQUAL REG REG .

    $default  reduce using rule 32 (Program)


state 67

   15 Program: Program SUBTRACT INT INT . REG

    REG  shift, and go to state 83


state 68

   14 Program: Program SUBTRACT REG INT . REG

    REG  shift, and go to state 84


state 69

   13 Program: Program SUBTRACT REG REG . REG

    REG  shift, and go to state 85


state 70

   18 Program: Program MULTIPLY INT INT . REG

    REG  shift, and go to state 86


state 71

   17 Program: Program MULTIPLY REG INT . REG

    REG  shift, and go to state 87


state 72

   16 Program: Program MULTIPLY REG REG . REG

    REG  shift, and go to state 88


state 73

   21 Program: Program DIVIDE INT INT . REG

    REG  shift, and go to state 89


state 74

   20 Program: Program DIVIDE REG INT . REG

    REG  shift, and go to state 90


state 75

   19 Program: Program DIVIDE REG REG . REG

    REG  shift, and go to state 91


state 76

    4 Program: Program NEW_ARRAY STRING INT . REG

    REG  shift, and go to state 92


state 77

    5 Program: Program NEW_ARRAY STRING REG . REG

    REG  shift, and go to state 93


state 78

   12 Program: Program ADD INT INT REG .

    $default  reduce using rule 12 (Program)


state 79

   11 Program: Program ADD REG INT REG .

    $default  reduce using rule 11 (Program)


state 80

   10 Program: Program ADD REG REG REG .

    $default  reduce using rule 10 (Program)


state 81

    2 Program: Program ARRAY_SET REG REG REG .

    $default  reduce using rule 2 (Program)


state 82

    3 Program: Program ARRAY_GET REG REG REG .

    $default  reduce using rule 3 (Program)


state 83

   15 Program: Program SUBTRACT INT INT REG .

    $default  reduce using rule 15 (Program)


state 84

   14 Program: Program SUBTRACT REG INT REG .

    $default  reduce using rule 14 (Program)


state 85

   13 Program: Program SUBTRACT REG REG REG .

    $default  reduce using rule 13 (Program)


state 86

   18 Program: Program MULTIPLY INT INT REG .

    $default  reduce using rule 18 (Program)


state 87

   17 Program: Program MULTIPLY REG INT REG .

    $default  reduce using rule 17 (Program)


state 88

   16 Program: Program MULTIPLY REG REG REG .

    $default  reduce using rule 16 (Program)


state 89

   21 Program: Program DIVIDE INT INT REG .

    $default  reduce using rule 21 (Program)


state 90

   20 Program: Program DIVIDE REG INT REG .

    $default  reduce using rule 20 (Program)


state 91

   19 Program: Program DIVIDE REG REG REG .

    $default  reduce using rule 19 (Program)


state 92

    4 Program: Program NEW_ARRAY STRING INT REG .

    $default  reduce using rule 4 (Program)


state 93

    5 Program: Program NEW_ARRAY STRING REG REG .

    $default  reduce using rule 5 (Program)
