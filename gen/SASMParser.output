Terminals unused in grammar

   WORD
   REAL
   PUSH
   POP


Grammar

    0 $accept: Program $end

    1 Program: /* empty */
    2        | Program CALL_FN STRING
    3        | Program RETURN
    4        | Program ARRAY_SET REG REG REG
    5        | Program ARRAY_GET REG REG REG
    6        | Program NEW_ARRAY STRING INT REG
    7        | Program PUSH_REGISTERS REG INT
    8        | Program POP_REGISTERS REG INT
    9        | Program POP_NIL
   10        | Program NEW_ARRAY STRING REG REG
   11        | Program LOAD INT REG
   12        | Program LOAD LONG REG
   13        | Program LOAD STRING REG
   14        | Program MOVE REG REG
   15        | Program ADD REG REG REG
   16        | Program ADD REG INT REG
   17        | Program ADD INT INT REG
   18        | Program SUBTRACT REG REG REG
   19        | Program SUBTRACT REG INT REG
   20        | Program SUBTRACT INT INT REG
   21        | Program MULTIPLY REG REG REG
   22        | Program MULTIPLY REG INT REG
   23        | Program MULTIPLY INT INT REG
   24        | Program DIVIDE REG REG REG
   25        | Program DIVIDE REG INT REG
   26        | Program DIVIDE INT INT REG
   27        | Program TEST_EQUAL REG REG
   28        | Program TEST_EQUAL REG INT
   29        | Program TEST_NOT_EQUAL REG REG
   30        | Program TEST_NOT_EQUAL REG INT
   31        | Program LESS_THAN REG REG
   32        | Program LESS_THAN REG INT
   33        | Program GREATER_THAN REG REG
   34        | Program GREATER_THAN REG INT
   35        | Program LESS_THAN_OR_EQUAL REG REG
   36        | Program LESS_THAN_OR_EQUAL REG INT
   37        | Program GREATER_THAN_OR_EQUAL REG REG
   38        | Program GREATER_THAN_OR_EQUAL REG INT
   39        | Program JUMP INT
   40        | Program JUMP_RELATIVE INT
   41        | Program JUMP REG
   42        | Program JUMP_RELATIVE REG


Terminals, with rules where they appear

$end (0) 0
error (256)
WORD (258)
STRING (259) 2 6 10 13
REAL (260)
INT (261) 6 7 8 11 16 17 19 20 22 23 25 26 28 30 32 34 36 38 39 40
REG (262) 4 5 6 7 8 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28 29 30 31 32 33 34 35 36 37 38 41 42
LONG (263) 12
PUSH_REGISTERS (264) 7
POP_REGISTERS (265) 8
POP_NIL (266) 9
JUMP_RELATIVE (267) 40 42
CALL_FN (268) 2
LOAD (269) 11 12 13
ADD (270) 15 16 17
PUSH (271)
POP (272)
MOVE (273) 14
TEST_EQUAL (274) 27 28
TEST_NOT_EQUAL (275) 29 30
JUMP (276) 39 41
RETURN (277) 3
LESS_THAN (278) 31 32
LESS_THAN_OR_EQUAL (279) 35 36
ARRAY_SET (280) 4
ARRAY_GET (281) 5
GREATER_THAN (282) 33 34
GREATER_THAN_OR_EQUAL (283) 37 38
SUBTRACT (284) 18 19 20
MULTIPLY (285) 21 22 23
DIVIDE (286) 24 25 26
NEW_ARRAY (287) 6 10


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
Program (34)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
    22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42,
    on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
    22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42


state 0

    0 $accept: . Program $end

    $default  reduce using rule 1 (Program)

    Program  go to state 1


state 1

    0 $accept: Program . $end
    2 Program: Program . CALL_FN STRING
    3        | Program . RETURN
    4        | Program . ARRAY_SET REG REG REG
    5        | Program . ARRAY_GET REG REG REG
    6        | Program . NEW_ARRAY STRING INT REG
    7        | Program . PUSH_REGISTERS REG INT
    8        | Program . POP_REGISTERS REG INT
    9        | Program . POP_NIL
   10        | Program . NEW_ARRAY STRING REG REG
   11        | Program . LOAD INT REG
   12        | Program . LOAD LONG REG
   13        | Program . LOAD STRING REG
   14        | Program . MOVE REG REG
   15        | Program . ADD REG REG REG
   16        | Program . ADD REG INT REG
   17        | Program . ADD INT INT REG
   18        | Program . SUBTRACT REG REG REG
   19        | Program . SUBTRACT REG INT REG
   20        | Program . SUBTRACT INT INT REG
   21        | Program . MULTIPLY REG REG REG
   22        | Program . MULTIPLY REG INT REG
   23        | Program . MULTIPLY INT INT REG
   24        | Program . DIVIDE REG REG REG
   25        | Program . DIVIDE REG INT REG
   26        | Program . DIVIDE INT INT REG
   27        | Program . TEST_EQUAL REG REG
   28        | Program . TEST_EQUAL REG INT
   29        | Program . TEST_NOT_EQUAL REG REG
   30        | Program . TEST_NOT_EQUAL REG INT
   31        | Program . LESS_THAN REG REG
   32        | Program . LESS_THAN REG INT
   33        | Program . GREATER_THAN REG REG
   34        | Program . GREATER_THAN REG INT
   35        | Program . LESS_THAN_OR_EQUAL REG REG
   36        | Program . LESS_THAN_OR_EQUAL REG INT
   37        | Program . GREATER_THAN_OR_EQUAL REG REG
   38        | Program . GREATER_THAN_OR_EQUAL REG INT
   39        | Program . JUMP INT
   40        | Program . JUMP_RELATIVE INT
   41        | Program . JUMP REG
   42        | Program . JUMP_RELATIVE REG

    $end                   shift, and go to state 2
    PUSH_REGISTERS         shift, and go to state 3
    POP_REGISTERS          shift, and go to state 4
    POP_NIL                shift, and go to state 5
    JUMP_RELATIVE          shift, and go to state 6
    CALL_FN                shift, and go to state 7
    LOAD                   shift, and go to state 8
    ADD                    shift, and go to state 9
    MOVE                   shift, and go to state 10
    TEST_EQUAL             shift, and go to state 11
    TEST_NOT_EQUAL         shift, and go to state 12
    JUMP                   shift, and go to state 13
    RETURN                 shift, and go to state 14
    LESS_THAN              shift, and go to state 15
    LESS_THAN_OR_EQUAL     shift, and go to state 16
    ARRAY_SET              shift, and go to state 17
    ARRAY_GET              shift, and go to state 18
    GREATER_THAN           shift, and go to state 19
    GREATER_THAN_OR_EQUAL  shift, and go to state 20
    SUBTRACT               shift, and go to state 21
    MULTIPLY               shift, and go to state 22
    DIVIDE                 shift, and go to state 23
    NEW_ARRAY              shift, and go to state 24


state 2

    0 $accept: Program $end .

    $default  accept


state 3

    7 Program: Program PUSH_REGISTERS . REG INT

    REG  shift, and go to state 25


state 4

    8 Program: Program POP_REGISTERS . REG INT

    REG  shift, and go to state 26


state 5

    9 Program: Program POP_NIL .

    $default  reduce using rule 9 (Program)


state 6

   40 Program: Program JUMP_RELATIVE . INT
   42        | Program JUMP_RELATIVE . REG

    INT  shift, and go to state 27
    REG  shift, and go to state 28


state 7

    2 Program: Program CALL_FN . STRING

    STRING  shift, and go to state 29


state 8

   11 Program: Program LOAD . INT REG
   12        | Program LOAD . LONG REG
   13        | Program LOAD . STRING REG

    STRING  shift, and go to state 30
    INT     shift, and go to state 31
    LONG    shift, and go to state 32


state 9

   15 Program: Program ADD . REG REG REG
   16        | Program ADD . REG INT REG
   17        | Program ADD . INT INT REG

    INT  shift, and go to state 33
    REG  shift, and go to state 34


state 10

   14 Program: Program MOVE . REG REG

    REG  shift, and go to state 35


state 11

   27 Program: Program TEST_EQUAL . REG REG
   28        | Program TEST_EQUAL . REG INT

    REG  shift, and go to state 36


state 12

   29 Program: Program TEST_NOT_EQUAL . REG REG
   30        | Program TEST_NOT_EQUAL . REG INT

    REG  shift, and go to state 37


state 13

   39 Program: Program JUMP . INT
   41        | Program JUMP . REG

    INT  shift, and go to state 38
    REG  shift, and go to state 39


state 14

    3 Program: Program RETURN .

    $default  reduce using rule 3 (Program)


state 15

   31 Program: Program LESS_THAN . REG REG
   32        | Program LESS_THAN . REG INT

    REG  shift, and go to state 40


state 16

   35 Program: Program LESS_THAN_OR_EQUAL . REG REG
   36        | Program LESS_THAN_OR_EQUAL . REG INT

    REG  shift, and go to state 41


state 17

    4 Program: Program ARRAY_SET . REG REG REG

    REG  shift, and go to state 42


state 18

    5 Program: Program ARRAY_GET . REG REG REG

    REG  shift, and go to state 43


state 19

   33 Program: Program GREATER_THAN . REG REG
   34        | Program GREATER_THAN . REG INT

    REG  shift, and go to state 44


state 20

   37 Program: Program GREATER_THAN_OR_EQUAL . REG REG
   38        | Program GREATER_THAN_OR_EQUAL . REG INT

    REG  shift, and go to state 45


state 21

   18 Program: Program SUBTRACT . REG REG REG
   19        | Program SUBTRACT . REG INT REG
   20        | Program SUBTRACT . INT INT REG

    INT  shift, and go to state 46
    REG  shift, and go to state 47


state 22

   21 Program: Program MULTIPLY . REG REG REG
   22        | Program MULTIPLY . REG INT REG
   23        | Program MULTIPLY . INT INT REG

    INT  shift, and go to state 48
    REG  shift, and go to state 49


state 23

   24 Program: Program DIVIDE . REG REG REG
   25        | Program DIVIDE . REG INT REG
   26        | Program DIVIDE . INT INT REG

    INT  shift, and go to state 50
    REG  shift, and go to state 51


state 24

    6 Program: Program NEW_ARRAY . STRING INT REG
   10        | Program NEW_ARRAY . STRING REG REG

    STRING  shift, and go to state 52


state 25

    7 Program: Program PUSH_REGISTERS REG . INT

    INT  shift, and go to state 53


state 26

    8 Program: Program POP_REGISTERS REG . INT

    INT  shift, and go to state 54


state 27

   40 Program: Program JUMP_RELATIVE INT .

    $default  reduce using rule 40 (Program)


state 28

   42 Program: Program JUMP_RELATIVE REG .

    $default  reduce using rule 42 (Program)


state 29

    2 Program: Program CALL_FN STRING .

    $default  reduce using rule 2 (Program)


state 30

   13 Program: Program LOAD STRING . REG

    REG  shift, and go to state 55


state 31

   11 Program: Program LOAD INT . REG

    REG  shift, and go to state 56


state 32

   12 Program: Program LOAD LONG . REG

    REG  shift, and go to state 57


state 33

   17 Program: Program ADD INT . INT REG

    INT  shift, and go to state 58


state 34

   15 Program: Program ADD REG . REG REG
   16        | Program ADD REG . INT REG

    INT  shift, and go to state 59
    REG  shift, and go to state 60


state 35

   14 Program: Program MOVE REG . REG

    REG  shift, and go to state 61


state 36

   27 Program: Program TEST_EQUAL REG . REG
   28        | Program TEST_EQUAL REG . INT

    INT  shift, and go to state 62
    REG  shift, and go to state 63


state 37

   29 Program: Program TEST_NOT_EQUAL REG . REG
   30        | Program TEST_NOT_EQUAL REG . INT

    INT  shift, and go to state 64
    REG  shift, and go to state 65


state 38

   39 Program: Program JUMP INT .

    $default  reduce using rule 39 (Program)


state 39

   41 Program: Program JUMP REG .

    $default  reduce using rule 41 (Program)


state 40

   31 Program: Program LESS_THAN REG . REG
   32        | Program LESS_THAN REG . INT

    INT  shift, and go to state 66
    REG  shift, and go to state 67


state 41

   35 Program: Program LESS_THAN_OR_EQUAL REG . REG
   36        | Program LESS_THAN_OR_EQUAL REG . INT

    INT  shift, and go to state 68
    REG  shift, and go to state 69


state 42

    4 Program: Program ARRAY_SET REG . REG REG

    REG  shift, and go to state 70


state 43

    5 Program: Program ARRAY_GET REG . REG REG

    REG  shift, and go to state 71


state 44

   33 Program: Program GREATER_THAN REG . REG
   34        | Program GREATER_THAN REG . INT

    INT  shift, and go to state 72
    REG  shift, and go to state 73


state 45

   37 Program: Program GREATER_THAN_OR_EQUAL REG . REG
   38        | Program GREATER_THAN_OR_EQUAL REG . INT

    INT  shift, and go to state 74
    REG  shift, and go to state 75


state 46

   20 Program: Program SUBTRACT INT . INT REG

    INT  shift, and go to state 76


state 47

   18 Program: Program SUBTRACT REG . REG REG
   19        | Program SUBTRACT REG . INT REG

    INT  shift, and go to state 77
    REG  shift, and go to state 78


state 48

   23 Program: Program MULTIPLY INT . INT REG

    INT  shift, and go to state 79


state 49

   21 Program: Program MULTIPLY REG . REG REG
   22        | Program MULTIPLY REG . INT REG

    INT  shift, and go to state 80
    REG  shift, and go to state 81


state 50

   26 Program: Program DIVIDE INT . INT REG

    INT  shift, and go to state 82


state 51

   24 Program: Program DIVIDE REG . REG REG
   25        | Program DIVIDE REG . INT REG

    INT  shift, and go to state 83
    REG  shift, and go to state 84


state 52

    6 Program: Program NEW_ARRAY STRING . INT REG
   10        | Program NEW_ARRAY STRING . REG REG

    INT  shift, and go to state 85
    REG  shift, and go to state 86


state 53

    7 Program: Program PUSH_REGISTERS REG INT .

    $default  reduce using rule 7 (Program)


state 54

    8 Program: Program POP_REGISTERS REG INT .

    $default  reduce using rule 8 (Program)


state 55

   13 Program: Program LOAD STRING REG .

    $default  reduce using rule 13 (Program)


state 56

   11 Program: Program LOAD INT REG .

    $default  reduce using rule 11 (Program)


state 57

   12 Program: Program LOAD LONG REG .

    $default  reduce using rule 12 (Program)


state 58

   17 Program: Program ADD INT INT . REG

    REG  shift, and go to state 87


state 59

   16 Program: Program ADD REG INT . REG

    REG  shift, and go to state 88


state 60

   15 Program: Program ADD REG REG . REG

    REG  shift, and go to state 89


state 61

   14 Program: Program MOVE REG REG .

    $default  reduce using rule 14 (Program)


state 62

   28 Program: Program TEST_EQUAL REG INT .

    $default  reduce using rule 28 (Program)


state 63

   27 Program: Program TEST_EQUAL REG REG .

    $default  reduce using rule 27 (Program)


state 64

   30 Program: Program TEST_NOT_EQUAL REG INT .

    $default  reduce using rule 30 (Program)


state 65

   29 Program: Program TEST_NOT_EQUAL REG REG .

    $default  reduce using rule 29 (Program)


state 66

   32 Program: Program LESS_THAN REG INT .

    $default  reduce using rule 32 (Program)


state 67

   31 Program: Program LESS_THAN REG REG .

    $default  reduce using rule 31 (Program)


state 68

   36 Program: Program LESS_THAN_OR_EQUAL REG INT .

    $default  reduce using rule 36 (Program)


state 69

   35 Program: Program LESS_THAN_OR_EQUAL REG REG .

    $default  reduce using rule 35 (Program)


state 70

    4 Program: Program ARRAY_SET REG REG . REG

    REG  shift, and go to state 90


state 71

    5 Program: Program ARRAY_GET REG REG . REG

    REG  shift, and go to state 91


state 72

   34 Program: Program GREATER_THAN REG INT .

    $default  reduce using rule 34 (Program)


state 73

   33 Program: Program GREATER_THAN REG REG .

    $default  reduce using rule 33 (Program)


state 74

   38 Program: Program GREATER_THAN_OR_EQUAL REG INT .

    $default  reduce using rule 38 (Program)


state 75

   37 Program: Program GREATER_THAN_OR_EQUAL REG REG .

    $default  reduce using rule 37 (Program)


state 76

   20 Program: Program SUBTRACT INT INT . REG

    REG  shift, and go to state 92


state 77

   19 Program: Program SUBTRACT REG INT . REG

    REG  shift, and go to state 93


state 78

   18 Program: Program SUBTRACT REG REG . REG

    REG  shift, and go to state 94


state 79

   23 Program: Program MULTIPLY INT INT . REG

    REG  shift, and go to state 95


state 80

   22 Program: Program MULTIPLY REG INT . REG

    REG  shift, and go to state 96


state 81

   21 Program: Program MULTIPLY REG REG . REG

    REG  shift, and go to state 97


state 82

   26 Program: Program DIVIDE INT INT . REG

    REG  shift, and go to state 98


state 83

   25 Program: Program DIVIDE REG INT . REG

    REG  shift, and go to state 99


state 84

   24 Program: Program DIVIDE REG REG . REG

    REG  shift, and go to state 100


state 85

    6 Program: Program NEW_ARRAY STRING INT . REG

    REG  shift, and go to state 101


state 86

   10 Program: Program NEW_ARRAY STRING REG . REG

    REG  shift, and go to state 102


state 87

   17 Program: Program ADD INT INT REG .

    $default  reduce using rule 17 (Program)


state 88

   16 Program: Program ADD REG INT REG .

    $default  reduce using rule 16 (Program)


state 89

   15 Program: Program ADD REG REG REG .

    $default  reduce using rule 15 (Program)


state 90

    4 Program: Program ARRAY_SET REG REG REG .

    $default  reduce using rule 4 (Program)


state 91

    5 Program: Program ARRAY_GET REG REG REG .

    $default  reduce using rule 5 (Program)


state 92

   20 Program: Program SUBTRACT INT INT REG .

    $default  reduce using rule 20 (Program)


state 93

   19 Program: Program SUBTRACT REG INT REG .

    $default  reduce using rule 19 (Program)


state 94

   18 Program: Program SUBTRACT REG REG REG .

    $default  reduce using rule 18 (Program)


state 95

   23 Program: Program MULTIPLY INT INT REG .

    $default  reduce using rule 23 (Program)


state 96

   22 Program: Program MULTIPLY REG INT REG .

    $default  reduce using rule 22 (Program)


state 97

   21 Program: Program MULTIPLY REG REG REG .

    $default  reduce using rule 21 (Program)


state 98

   26 Program: Program DIVIDE INT INT REG .

    $default  reduce using rule 26 (Program)


state 99

   25 Program: Program DIVIDE REG INT REG .

    $default  reduce using rule 25 (Program)


state 100

   24 Program: Program DIVIDE REG REG REG .

    $default  reduce using rule 24 (Program)


state 101

    6 Program: Program NEW_ARRAY STRING INT REG .

    $default  reduce using rule 6 (Program)


state 102

   10 Program: Program NEW_ARRAY STRING REG REG .

    $default  reduce using rule 10 (Program)
