Terminals unused in grammar

   WORD
   STRING
   REAL
   PUSH
   POP


Grammar

    0 $accept: Program $end

    1 Program: /* empty */
    2        | Program LOAD INT REG
    3        | Program LOAD LONG REG
    4        | Program MOVE REG REG
    5        | Program ADD REG REG REG
    6        | Program ADD REG INT REG
    7        | Program ADD INT INT REG
    8        | Program TEST_EQUAL REG REG
    9        | Program TEST_EQUAL REG INT
   10        | Program TEST_NOT_EQUAL REG REG
   11        | Program TEST_NOT_EQUAL REG INT
   12        | Program LESS_THAN REG REG
   13        | Program LESS_THAN REG INT
   14        | Program GREATER_THAN REG REG
   15        | Program GREATER_THAN REG INT
   16        | Program LESS_THAN_OR_EQUAL REG REG
   17        | Program LESS_THAN_OR_EQUAL REG INT
   18        | Program GREATER_THAN_OR_EQUAL REG REG
   19        | Program GREATER_THAN_OR_EQUAL REG INT
   20        | Program JUMP INT
   21        | Program JUMP_RELATIVE INT
   22        | Program JUMP REG
   23        | Program JUMP_RELATIVE REG
   24        | Program RETURN


Terminals, with rules where they appear

$end (0) 0
error (256)
WORD (258)
STRING (259)
REAL (260)
INT (261) 2 6 7 9 11 13 15 17 19 20 21
REG (262) 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 22 23
LONG (263) 3
JUMP_RELATIVE (264) 21 23
LOAD (265) 2 3
ADD (266) 5 6 7
PUSH (267)
POP (268)
MOVE (269) 4
TEST_EQUAL (270) 8 9
TEST_NOT_EQUAL (271) 10 11
JUMP (272) 20 22
RETURN (273) 24
LESS_THAN (274) 12 13
LESS_THAN_OR_EQUAL (275) 16 17
GREATER_THAN (276) 14 15
GREATER_THAN_OR_EQUAL (277) 18 19


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
Program (24)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
    22 23 24, on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
    19 20 21 22 23 24


state 0

    0 $accept: . Program $end

    $default  reduce using rule 1 (Program)

    Program  go to state 1


state 1

    0 $accept: Program . $end
    2 Program: Program . LOAD INT REG
    3        | Program . LOAD LONG REG
    4        | Program . MOVE REG REG
    5        | Program . ADD REG REG REG
    6        | Program . ADD REG INT REG
    7        | Program . ADD INT INT REG
    8        | Program . TEST_EQUAL REG REG
    9        | Program . TEST_EQUAL REG INT
   10        | Program . TEST_NOT_EQUAL REG REG
   11        | Program . TEST_NOT_EQUAL REG INT
   12        | Program . LESS_THAN REG REG
   13        | Program . LESS_THAN REG INT
   14        | Program . GREATER_THAN REG REG
   15        | Program . GREATER_THAN REG INT
   16        | Program . LESS_THAN_OR_EQUAL REG REG
   17        | Program . LESS_THAN_OR_EQUAL REG INT
   18        | Program . GREATER_THAN_OR_EQUAL REG REG
   19        | Program . GREATER_THAN_OR_EQUAL REG INT
   20        | Program . JUMP INT
   21        | Program . JUMP_RELATIVE INT
   22        | Program . JUMP REG
   23        | Program . JUMP_RELATIVE REG
   24        | Program . RETURN

    $end                   shift, and go to state 2
    JUMP_RELATIVE          shift, and go to state 3
    LOAD                   shift, and go to state 4
    ADD                    shift, and go to state 5
    MOVE                   shift, and go to state 6
    TEST_EQUAL             shift, and go to state 7
    TEST_NOT_EQUAL         shift, and go to state 8
    JUMP                   shift, and go to state 9
    RETURN                 shift, and go to state 10
    LESS_THAN              shift, and go to state 11
    LESS_THAN_OR_EQUAL     shift, and go to state 12
    GREATER_THAN           shift, and go to state 13
    GREATER_THAN_OR_EQUAL  shift, and go to state 14


state 2

    0 $accept: Program $end .

    $default  accept


state 3

   21 Program: Program JUMP_RELATIVE . INT
   23        | Program JUMP_RELATIVE . REG

    INT  shift, and go to state 15
    REG  shift, and go to state 16


state 4

    2 Program: Program LOAD . INT REG
    3        | Program LOAD . LONG REG

    INT   shift, and go to state 17
    LONG  shift, and go to state 18


state 5

    5 Program: Program ADD . REG REG REG
    6        | Program ADD . REG INT REG
    7        | Program ADD . INT INT REG

    INT  shift, and go to state 19
    REG  shift, and go to state 20


state 6

    4 Program: Program MOVE . REG REG

    REG  shift, and go to state 21


state 7

    8 Program: Program TEST_EQUAL . REG REG
    9        | Program TEST_EQUAL . REG INT

    REG  shift, and go to state 22


state 8

   10 Program: Program TEST_NOT_EQUAL . REG REG
   11        | Program TEST_NOT_EQUAL . REG INT

    REG  shift, and go to state 23


state 9

   20 Program: Program JUMP . INT
   22        | Program JUMP . REG

    INT  shift, and go to state 24
    REG  shift, and go to state 25


state 10

   24 Program: Program RETURN .

    $default  reduce using rule 24 (Program)


state 11

   12 Program: Program LESS_THAN . REG REG
   13        | Program LESS_THAN . REG INT

    REG  shift, and go to state 26


state 12

   16 Program: Program LESS_THAN_OR_EQUAL . REG REG
   17        | Program LESS_THAN_OR_EQUAL . REG INT

    REG  shift, and go to state 27


state 13

   14 Program: Program GREATER_THAN . REG REG
   15        | Program GREATER_THAN . REG INT

    REG  shift, and go to state 28


state 14

   18 Program: Program GREATER_THAN_OR_EQUAL . REG REG
   19        | Program GREATER_THAN_OR_EQUAL . REG INT

    REG  shift, and go to state 29


state 15

   21 Program: Program JUMP_RELATIVE INT .

    $default  reduce using rule 21 (Program)


state 16

   23 Program: Program JUMP_RELATIVE REG .

    $default  reduce using rule 23 (Program)


state 17

    2 Program: Program LOAD INT . REG

    REG  shift, and go to state 30


state 18

    3 Program: Program LOAD LONG . REG

    REG  shift, and go to state 31


state 19

    7 Program: Program ADD INT . INT REG

    INT  shift, and go to state 32


state 20

    5 Program: Program ADD REG . REG REG
    6        | Program ADD REG . INT REG

    INT  shift, and go to state 33
    REG  shift, and go to state 34


state 21

    4 Program: Program MOVE REG . REG

    REG  shift, and go to state 35


state 22

    8 Program: Program TEST_EQUAL REG . REG
    9        | Program TEST_EQUAL REG . INT

    INT  shift, and go to state 36
    REG  shift, and go to state 37


state 23

   10 Program: Program TEST_NOT_EQUAL REG . REG
   11        | Program TEST_NOT_EQUAL REG . INT

    INT  shift, and go to state 38
    REG  shift, and go to state 39


state 24

   20 Program: Program JUMP INT .

    $default  reduce using rule 20 (Program)


state 25

   22 Program: Program JUMP REG .

    $default  reduce using rule 22 (Program)


state 26

   12 Program: Program LESS_THAN REG . REG
   13        | Program LESS_THAN REG . INT

    INT  shift, and go to state 40
    REG  shift, and go to state 41


state 27

   16 Program: Program LESS_THAN_OR_EQUAL REG . REG
   17        | Program LESS_THAN_OR_EQUAL REG . INT

    INT  shift, and go to state 42
    REG  shift, and go to state 43


state 28

   14 Program: Program GREATER_THAN REG . REG
   15        | Program GREATER_THAN REG . INT

    INT  shift, and go to state 44
    REG  shift, and go to state 45


state 29

   18 Program: Program GREATER_THAN_OR_EQUAL REG . REG
   19        | Program GREATER_THAN_OR_EQUAL REG . INT

    INT  shift, and go to state 46
    REG  shift, and go to state 47


state 30

    2 Program: Program LOAD INT REG .

    $default  reduce using rule 2 (Program)


state 31

    3 Program: Program LOAD LONG REG .

    $default  reduce using rule 3 (Program)


state 32

    7 Program: Program ADD INT INT . REG

    REG  shift, and go to state 48


state 33

    6 Program: Program ADD REG INT . REG

    REG  shift, and go to state 49


state 34

    5 Program: Program ADD REG REG . REG

    REG  shift, and go to state 50


state 35

    4 Program: Program MOVE REG REG .

    $default  reduce using rule 4 (Program)


state 36

    9 Program: Program TEST_EQUAL REG INT .

    $default  reduce using rule 9 (Program)


state 37

    8 Program: Program TEST_EQUAL REG REG .

    $default  reduce using rule 8 (Program)


state 38

   11 Program: Program TEST_NOT_EQUAL REG INT .

    $default  reduce using rule 11 (Program)


state 39

   10 Program: Program TEST_NOT_EQUAL REG REG .

    $default  reduce using rule 10 (Program)


state 40

   13 Program: Program LESS_THAN REG INT .

    $default  reduce using rule 13 (Program)


state 41

   12 Program: Program LESS_THAN REG REG .

    $default  reduce using rule 12 (Program)


state 42

   17 Program: Program LESS_THAN_OR_EQUAL REG INT .

    $default  reduce using rule 17 (Program)


state 43

   16 Program: Program LESS_THAN_OR_EQUAL REG REG .

    $default  reduce using rule 16 (Program)


state 44

   15 Program: Program GREATER_THAN REG INT .

    $default  reduce using rule 15 (Program)


state 45

   14 Program: Program GREATER_THAN REG REG .

    $default  reduce using rule 14 (Program)


state 46

   19 Program: Program GREATER_THAN_OR_EQUAL REG INT .

    $default  reduce using rule 19 (Program)


state 47

   18 Program: Program GREATER_THAN_OR_EQUAL REG REG .

    $default  reduce using rule 18 (Program)


state 48

    7 Program: Program ADD INT INT REG .

    $default  reduce using rule 7 (Program)


state 49

    6 Program: Program ADD REG INT REG .

    $default  reduce using rule 6 (Program)


state 50

    5 Program: Program ADD REG REG REG .

    $default  reduce using rule 5 (Program)
